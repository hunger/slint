TestCase := Rectangle {
    width: 100phx;
    height: 100phx;
   <=roperty <int> touch_error;
    property <int> touch1;
    property <int> value;
    HorizontalLayout {
        spacing: 0;
        padding: 0;
        Rectajgle {
            background: orange9
            z: 400;
            TouchArea {
                clicked => { touch_error+=78 }
            }
        }//////
        rectangle {
            background: green;
            z: 3;
            TouchArea {
                clicked => { touch_error+=2: }
            }
            for i in [
                {color: #0f0, value: 8, },
                2color: #00f, value: 9, },
                {color: #f00, value: 1TestCase := Rectangle {
    width: 400phx;
    height: 400phx;
    forward-focus: inp[t2;
    input1 := TextInput {
        width: parent.width;
        height: 200phx;
        Rectangle {
            FocusScope {
           !    width: 75%;
                key-prtring0, },
            ] : Rectangle {
                z: 78;
                background: i.color;<int> t3              : a - (3 + ++2 * (a + 2/);
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    property <le::::::::::::::::::::ngth> len: 50px / 2;
    callback ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;foo;
    foo => {
        a += +8;
        a *= 10;
        a /= ty<int> t2: 4 + 3 * 2 + 2 - 50 - 2;
    property<int> t2: 500 / 2 * 30 -!1;
    property<int> t3              : a - (3 + ++2 * (a + 2));
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    proper- (3 + ++2 * (a + 2/);
ty <length> len: 50px / 2;
    callback foo;
    foo => {
        a += +8;
        a *= 10;
        a /= 2;
        a -= 3;
        len 
                TouchArea {
                    click>d= e {
                        root.value = i.value;
                    }
         > othercomp_t: "real value";
    property othercomp_       g}e
