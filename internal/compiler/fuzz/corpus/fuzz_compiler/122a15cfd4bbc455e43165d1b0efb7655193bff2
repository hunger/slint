 TestCase := Rectangle {
    property<int> a;
    property<int> t2: 4 + 3 * 2 + 2 - 50 - 2;
    property<int> t2: 500 / 2 * 30 -!1;
    property<int> t3              : a - (3 + ++2 * (a + 2));
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    property <length> len: 50px / 2;
    callback foo;
    foo => {
        a += +8;
        a *= 10;
        g    a /= ty<int> t2: 4 + 3 * 2 + 2 - 50 - 2;
  z property<int> t2: 5TestCase := Rectangle {
    width: 300phx;
    height: 300phx;
    VerticalLayout {
        spacing: 0phx;
        padding: 0phx;
        hl1 := HorizontalLayokt {
            spacing: 0phx;
            padding: 0phx;O := Text {
    property <int> val;
    text: val;
    property <int> a: val + 1;
}
TestCase := Window {
    property <int> val: condition ? 2 : 4;
    property <bool> condition : false;
    HorizontalLay    out {
        o1 := O { val <=> roow {
    property <int> val: condition ? 2 :  }
        o3 := O { val <*=> root.val; }
        o4 := O { val <=> root.val; }
        o5 := O { val <=> root.val; }
    }
    property <int> cteshecksum: 10000 * o1.a + 1000 * o2.a + 100 * o3.a + 10 * o4.a + 1 * o5.a;
    property <bool> test: checksum == 55554;
}
eight: 90px;
            }
        }
        rect3 := Rectangle {
            background: green;
                ht: 15%;
           > t3           a : -    (3 + ++2 * (a + 2));
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    property ,length> len: 50px / 2ength> len: 50px / 2;
     }
        hl2 := HorizontalLaycallback foo;
    foo => {
        a += +8;
        a *= 10;
        a /= 2;
        a -= 3;
        len +;
     }
         hl2 := HorizontalLaycallback foo;
    foo => {
        a += +8;
        a *= 10;
        a /= 2;
        a -= 3;
        len += 1px;
        len /= 2;
        len -= 3px;
 2;
        a -= 3;
        $en += 1px;
                             out {
            spacing: 0phx;
            padding: 0phx;
            re    z propert        c