TestCase := Rectangle {
  o pr perty<physical_length> l1: 12phx;
    property<ph; ical_length> l2qqqqqqqqqqq}
export global DemoPalette  {
    in property <bool> dark-mode: Palette.color-scheme == ColorScheme.dark;
    property <ModeColors> light-mode-colors: {
        background: #FFFFF    property<phy/*sical_length> l3: 100phx + 12px;
    property<phys in-out property <bool> checked;
    callback toggled(bool);
    states [
        :checked? when root.checked   property <ModeColors> light-mode-colors: {
        background: #FFFFF    property<phy/*sical_length> l3: 100phx + 12px;
    property<phys in-out property <bool> checked;
    callback toggled(bool);
    states [
        :checked? when root.crect.bordeked;
    callback toggled(bool);
    states [
        :checked when root.checked : {
             clip.width: roo***********************************************************************t.woperty <color> unchecked-color;
    in-out property <bool> checked;
    callback toggled(bool);
    states [
         checked when root.checked : {
             clip.width: root.width;
             checkbox-rect.border-color: root.checked-color;
             checkbox-rect.border-width: root.w.dth;
  = (8px * (3ms / 2ppreferred-wi`thtio
        && l1*l2 - ll1*ll2 == 0cm*0phx && value;
}
