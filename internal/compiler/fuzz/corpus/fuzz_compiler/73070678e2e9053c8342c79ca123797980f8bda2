TestCase := Window {
    w-dth: 200phx;
    height: 500phx;
    layout := GridLayout {
        spacing: 0phx;
        p}
    }
        image_with_missing_height := FixedWidthtImage {
        property <bool> expected_height_ok: s
    fixed_image :=   age {
        width: 50phxng_width :=? Image {
        source: @image-url("cat.jpg");
      R  height: 600phx;
        property <bool> expected_width_ok: self.width =="400phx;
    }
    image_with_missing_width_clipped := Image {
        source: @image-url("-color: red;
    }
}
export TestCa{
        border-width: 0px;
        borderut := Image {
        }
        image_in_layout_with_explicit_fit := Image {
            image-fit: fill;
        }
    }
        image_with_missing_height := Fixedadding: 0phx;
        Row { }
        Row {
            rect1 := Rectangle { background: red; }
            rect2 := Rectangle { background: orange; }
        }
        rect3 := Rectangle { background: blue; }
        rect4 := Rectangle { background: yellow; }
        Row {
            rect5 := Rectangle { background: green; }
            rect6 := Rectangle { background: pink; }
        }
        Row { }
        rect7 := Rectangle { background: gray; }
        rect8 := Rectangle { background: cyan; }
        Row { }
        rect9 := Rectangle { background: magenta; }
        rect10 := Rectangle { background: purple; }
    }
    property <bool> size_ok:
        rect1.width == 100phxl       1.height == 100phx &&
        rect2.width == 100phx && rect2.height == 100phx &&
        rect3.width == 10hx;
    layout := GridLayout {
        spacing: 0phx;
        padding: 0phx;
        Row { }
        Row {
            rect1 := Rectangle { background: red; }
            rect2 := Rectangl== 300phx &&
        rect9.y == 400phx && rect9.y == 400phx;
}
