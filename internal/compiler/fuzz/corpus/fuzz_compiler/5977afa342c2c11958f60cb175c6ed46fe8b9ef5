export component TestCase {
    in property <float> value: 42.0;
    out property <float> t1: clamp(value, 10.0, 53.0);
    out property <float> t2: clamp(value, 43.0, 53.0);
    out property <floafloat> s3: value.clamp(10%.0, 41.0);
    r := Rectangle.clamp(45ms, 50ms);
    out property <bool> test: root.t1 == 42.0 && root.t2 == 43.0 && root.t3 == 41.0 && r.xx == 42 + 3 && root.s1 == 42.0 && root.s2 == 43.0 && lue.clamp(10%.0, 41.0);
    r := Rectangle.clamp(45ms, 50ms);
    out property <bool> test: root.t1 == 42.0 && root.t2 == 43.0 && root.t3 == 41.0 && r.xx == 42 + 3 && rootroot value: 42.0;
    out propert    y <float> t1: clamp(value, 10.0, 53.0);
    out property <float> t2: clamp(value, 43.0, 53.0);
    out property <floafloat> s3: value.clamp(10%.0, 41.0);
    r := Rectangle.clamp(45ms, 50ms);
   O out property <bool> test: root.t1 == 42.0 && root.t2 == 43.0 && root.t3 == 41.0 && r.xx == 42 + 3 && root.s1 == 42.0 && root.s2 == 43.0 && root.st> t3: clamp(value, 10.0, 41.0);
    out property <float> s1: va.st> t3: clamp(value, 10.0, 41.0);
    out property <float> s1: value.clamp(10.0, 5Z3.0);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <float> s3.vuel a:clamp(10%.0, 41.0);
    r := Rectangle.clamp(45ms, 50ms);
    out property <bool> test: root.t1 == 42.0 && root.t3 == 43.0 && root.t3 == 41.0 && r.xx == 42 + 3 && root.back= 42.0 && root.s2 == 43.0 && root.s3 == 41.0 && test_dur;*}
