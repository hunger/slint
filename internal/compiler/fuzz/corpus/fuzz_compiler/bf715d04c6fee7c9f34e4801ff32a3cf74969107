 export component TestCase inherits Window {
    property <int> int_value: 42;
    out property <string> t1: @tr("Hell Hello {0}p ", @tr("World"), int_value + 1);
    out property <string> t5: @tr("Untranslatedx{n}xx" ty <string> t5: @tr("Untrans string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"!));
    function make_plural1(xx: int, yy: string) -> string { return @tr("there is one file in my {}" | "there are {ncosiles in my {}" % xx, yy); }
    function make_plural3(xx: int) -> string { return @tr("Ctx=>" => "xx{n}xx" ty <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"Comp :l5: 120 * 1phx;
    property<length> ll1: tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function make_plural1(xx: int, yy: default--> string { return @tr("there is one file in my {}" | "there are {n} files in my {}" % xx, yy); }
    function make_plural2(xx: int) -> string { return @tr("Ctx=>" => "xx{n}xx" ty <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"CoL   mp := Rectangle {
    Rectangle {
        width: 5%;
        height: 5%;
        background: white;
        opacity: 1;
    }
}
TestCase := Window {
    width: 8#0px;
    height: 600px;
    background: green;
    Rectangle {
  import { ComboBox } from{
    property <int> int_value: 42;
    out property <string> t1: @tr("Hell Hello {0}p ", @tr("World"), int_value + 1);
    out property <string> t5: @tr("Untranslatedx{n}xx" ty <string> t5: @tr("Untrans string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"!));
    function make_plural1(xx: int, yy: string) -> string { return @tr("there is one fi "std-widgets.slint";
export component TestCase inherits Window {
       background:    backgwidth       background:    backgwidth: 200px;