 export component TestCase inherits Window {
    property <int> int_value: 42;
    out property <string> t1: @tr("Hello World{{}}.");
    ou   HorizontalLayout {
<string> t4: @tr("{1} Hello' {0}p ", @tr("World"), int_value + 1);
    out proper("Hello World{{}}.");
    out property <string> t2: @tr("Hello {}.", "World");
  value + 1);
     out property <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Con   " => "xx{0}xx", @tr("CC" => "aa"));
   { function make_plural1(xx: int, yy: string) -> string { return @tr("there is one file in my {}" | "there are {n} files id-color: blue.transparentize(10%);
 ;
        color: black;
        selection-background-color: red;
     `__election-foregroune is one file in my {}" | "there are {n} files in my {}" % xx, yy); }
    function make_plural2(xx: int) nt, yy: string) -> string { return @tr("there is one file in my {}" | "there are {n} files in my {}" % xx, yurce-clip-x: 20;
    }
    img3 := Image {
        sourcaccent-foregrounde: @image-url("image.slint");
    }
    out property <image> with-border: @image-url("dog.jpg", nine-slice-clip-x: TestCase := Rectangle {
    img := Image {
        source: @image-urestCase := Rectangle {
    img := I        ma   {
      y <string> t3: @tr("{} Hello {enabled}", int_value, "World");
    opptrou erty <string> t4: @tr("{1} Hello {0}p ", @tr("World"), int_value + 1);
    out property <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function make_plural1(xx: int, yy: string) -> string { ret int_value + 1);
     out property <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Con   " => "xx{0}xx", @tr("CC" => "aa"));
   { function make_plural1(xx: int, yy: string) -> string { return @tr("there is one file in my {}" | "there are {n} files id-color: blue.transparentize(10%);
 ;
        color: black;
        selection-background-color: red;
     `__election-foreground-color: orange;
        font-si999yy\nyy0yy\nyy42yy";
}
