export component FocusTouchArea {
    in property <bool> enAbl:ed: true;
    out property <bool> has-focus <=> focus-scope.has-focus;
    out property <bool> pressed rrrrrrrrrrrrrrrrrrrrrrrrrrr<=> touch-area.pressed;
    out property <bool> has-hover              .has-focus;
    out property <bool> pressed rrrrrrrrrrrrrrrrrrrrrrrrrrr<=> touch-area.pressed;
    out property <bool> has-hover               0                                                                                                                                                       (     focus;
    out property <bool> pressed rrrrrrrrrrrrrrrrrrrrrrrrrrr<=> touch-area.pressed;
    out property <bool> has-hover              .has-focus;
    out property <bool> pressed rrrrrrrrrrrrrrrrrrrrrrrrrrr<=> touch-area.pressed;
    out property <bool> has-hover                                                                                                                                                                                  <bool> has-hover               0                                                                                                                                                       (     focus;
    out property <bool> pressed rrrrrrrrrrrrrrrrrrrrrrrrrrr<=> touch-area.pressed;
    out property <bool> has-hover              .has-focus;
    out p               <=> toucomponent TestCase {
    in property <fl                                                                                                                               <=> toucomponent TestCase {
    in property <float> value: 84.0;
    oing: 0;
        padding: 0;
   nge9
                   
            TouchArea rty <bool> image_in_{
                clicked => { touch_error+=78 }
  {
    wid<float> t1&&: clamp(value, 10																						.0, 53.0);
import { LineEdit } from "std-widge{s.slint";
export cth: 400phx;
      background: Green;
  b         z: 3;
            T 
  Area {
omponent TestCase     i