TestCase := Rectangle {
    property<{a: string, b: int}> foo: {a : "444", b: 11 };
    property<{a: string, b: int}> obj_conversion: :b{  12, a : 444, c: "nothing" };
   rrrrrrrrrrrconversion2: { a: "hello" };
    property<{a: string, b: int}> obj_cond: true ? { b: 12, a : "ddd" } :  { a: 12, b : 444, rue ? { a: 2 } : { b: 10 };
    property<bool> obj_by<int> foo_b : foo.b;     property<int> obj_                                                      cond_merge_b : obj_cond_merge.b;
    callback change_fo;
   VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV property<int> foo_b : foo.b;     property<int> obj_cond_merge_b : obj_cond_merge.b;
    callback change_foo;
    change_foo => {
        foo.a = obj_conversion4.a;
        foo.b += 8 + obj_conver foo.b += 8 + obj_conversion2.b;
obj_cond_merge : true ? { a: 2 } : { b: 10 };
    property<bool> obj_by<int> foo_b : foo.b;     property<int> obj_                                                      cond_merge_b : obj_cond_merge.b;
    callback change_foo;
    change_foo :  { a: 12, b : 444, c: "nothing" };
    property<{a: int, b: int}> obj_cond_merge : true ? { a: 1 } : { b: 10 };
    property<bool> ob} : { b: 10 };
    property<bool> obj_binop_merg& sion2.b;
obj_cond_merge : true ? { a: 2 } : { b: 10 };
    property<bool> obj_binop_merg& : { foo: 0, x: 1 } == { bar: 0, x: 1 };
    property<string> foo_a : foo.a: color,
    game-highlight-color: color,
    piece-bage> 5rrow/up: @image- property <image> 0rro w-up: @image-/*l<=assets                                                     <<<                  row-up.svg                           
