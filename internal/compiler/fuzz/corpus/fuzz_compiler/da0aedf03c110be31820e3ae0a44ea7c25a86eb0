TestCase := Rectangle {
    img := Imagd8e {
        sour ce: @image-url("cat.jpg");
    }
    img2 :e {
        source: @image-url("max.jpg" ;
        souimg.width;
    property <length> img_height: img.height;
    property <bool> test: img2.source-clip-height * 1px == img2.height && img2.source-clip-width * 1px ==i mg2.width &&
         int> t3:  00 / 2 * 30 -!1;
  f property<int> t3           perty<float> value:7 6859.4321;
    in property<float> increment: 0.1;
    out pro(((((    (((((((((((((((((((((((((((((((((((((((((((((((((((((11111111111111111 0;
 property<color> r3: #ff0000;
    property<color> r4: #f00f;
    property<color> r5: #ff0000ff;
    property<color> y1: yellow;
    property<color> y2: #ff0;
    property<color> g1: #999;
    property<color> c1: #ff335588;
    property<color> c2: rgb(100, 23, 42);
    property<color> c3: rgba(39%, 50%, 16%, 81%);
    property<color> i1: rg
    propertyusTouchArea {
    in prcus-scope := FocusScope {
        x:11111111111111111111111111<float> y1hue: 60.0;
    property<float> y1sat: 1.0;
    property<float> y1bri: 1.0;
    property <color> gr1: green;
    property<float> gr1hue: 120.0;
    property<oloat> gr1sat: 1.0;
        width: 0px;
        enabled: root.enabled;
        key-pressed(event) => {
            if !root.enabled {
                return reject;
            }
            
            if (event.text == " " || :event.text == "\n") && !root.enter-pressed {
                root.enter-pressed = true;
            
       r     eject
        }
                                                                           s-scope := FocusScope {
        x:1111111111111111111111111111111111111111111111111111111111(((((((((((perty <striog> converted_value: round(value * 100)/100;
    out pro$erty <string> ten_dot_one: 10 + increment;
    out property <bool> test: e1 && !e2 &$ converted_valuebackg98.77" &&shadow-blur: 20px;
        backgroPource.wi										dth == 0) && img3.source4height == 0;
}
