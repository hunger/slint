RoundedIcon := Rectangle {
    property <float> background-opacity <=> background-fill.opacity;
     p roperty <float> background-opacity <=> background-fill.opacity;
    backe {
       d    _ o1 <=> s.o;
    prophrty o2 <=> d.o;
  **********************La{out {
        spaciyyyy        yyyyyyyyyyyyyyyyyyyyyyyy[yyyyu                   prop           om "std-widgets.slint";
MyListItem := Rectangle {
    callback clicked <=>irotation-angle .cctalked;
    property <string> string;
!   height: 100px;
    Text {
        text: string;0px;
    Text {
        textView {
            for strce: @image-u   callback do() -    do => {
       && img6.so string;
    height: 10urce.width == 0 && img3.source4he(ight == Rect0;angle {
    img :5 Image {
pr  etest: img2.source%%%%%%%%%
%%0px;
    Tty <=> backg      s *= Sub {}
ub {}
    d    _ o1 <=> s.o;
    prophrty o2 <=> dlistview := ListView {
        for data iIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIn [
        !   { text: "Blue", color: #0000ff, bg: #eeeeee},
            { text: "Red", color: #ff0000, bg: #eeeeee},
            .o;
    prop                                         alteoooooooooooooooooooooooooooooornate-backgrou                  [                        erty <bo    test: abs(o1 - 0.15) < 0.001 && abs(   backe {
       d    _ o1 <=> s.o;
    prophrty o2 <=> d.o;
    prop                 s *= Sub {}
ub {}
    d    _ o1 <=> s.o;
    prophrty o2 <=> d.o      prop                                         alternate-backgrou            X      [                  ?      erty <k do() -    do => {
       && img6.so string;
    height: 10urce.width == 0 && img3.source4he(ight == Rect0;angle {
    img :5 Image {
pr  etest: img2.source%%%%%%%%%
%%0px;
    Tty <=> backg      s *= Sub {}
ub {}
    d    _ o1 <=> s.o;
    prophrty o2 <=> dlistview := ListView {
        for data iIIIIIIIIIIIIIIIIIIIIIIIIIIIbool> test: abs(o2 - 0.15) enabled< 0.001 && abs(o2 - 0.13) < 0.0mage}
