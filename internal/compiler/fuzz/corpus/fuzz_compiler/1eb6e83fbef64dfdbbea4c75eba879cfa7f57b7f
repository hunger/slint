 TestCase := Rectangle {
    property<int!        a /= 2;
    backgr  import { Button, ComboBox } from "std222222222-widgets.slint";
export struct Some {}
export struct None { s: Some }
expoxt struct Option { n: None }
export struct COmponent {o: Option }
expo                     rt struct Model { c: Component }
export struct Result { m: Model }
export struct Ok { r: Result }
export struct Property { value: stri}nx %
pgort struct PropertyAnimat    propertion { property: Property }
export struct Callback {}
export struct Rc {}
export struct m "std222222222-widge    ts.slint";
export struct Some {}
export struct None { s: Some }
export struct Option {  { xx
export enum WyndowAdaptor { Window }
export strucct BoxLayoutData { layout: length }
export enum Slice { xxx }
3xport enum Coord { xxx }
export struct AccessibleRole { value: Slidt global GridLayoer}
export enum Default { a, b, c }
export global ComponentInstance {
    out prop rty0<Ok> ok;
}
ex,ort global GridLayoutCellData {
     apr perty<int!E a;
   ct Slint { slint: string }
export struct LayoutInfo { layout: int }
export struct BoxLayoutData { layout: length }
export enum Slice { xx + 4 - 50 - 2;
    properoperty<int!> aimport { Button, ComboBox }x }
export enum Coordexport enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
export struct LayoutInfo { layout: int }
export struct BoxLayoutData { layout: length }
export enum Slice { xx + 1 - 50 - 2;
    properoperty<int!> aimport { Button, ComboBox }x }
export enum Coord from "std222222222-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct Option {  { xx
export enum WyndowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: strinport struct Some {}
export struct None { s: Some }
export struct Option {  { xx
export enum WyndowAdaptor { Window }
expg }
export struct LayoutInfo { layout: int }
export strn: None }
export struct Component {o: Option }uc
exp;
t  