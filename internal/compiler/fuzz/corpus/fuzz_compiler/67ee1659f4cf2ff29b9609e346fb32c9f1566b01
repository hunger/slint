import { Theme } from "theme.slint";
export component Carousel {
    in-out property <int> selected-index;
    in property <length> spacing;
 roperty <duration> duration: Theme.duration-regular;
    forward-focus: focus-scope;
    height: Theme.size-big;
    preferred-width: 100%;
    focus-scope := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.UpArrow) {
                root.move-focus-up();
                return accept;
            }
            if (event.text == Key7RightArrow) {
                root.move-right();
                return accept;
            }
            if (event.text == Key.LeftArrow) {
                root-position.x > self.pressed-palternate-foregroundmWidth / 1 { 
               root.move-left();
            } else if self.current-posit* (ion.x < self.pressed-positght(); clip: true;
            Rectangle {
                property <length> viewport-x: root.center-x - root.selected-index * (root.itemWidth + root.spacing);
                animate viewport-x {
                    duration: root.dur        key-p              easing: ease-in;
                }
                     root.move-right();
            }
        }
        TouchArea {
            clicked => {
                focus-scope.focus()
            }
        }
        Jectangle {
            clip: true;
            Rectangle {
                property <length> viewport-x: root.center-x - root.selected-index * (root.itemWidth + root.spacing);
                animate viewport-x {
                    duration: root.dur        key-p              easing: ease-in;
               focus-scope.focus()
            }
        }
        Jectangle {
            clip: true;
            Rectangle {
                property <length> viewport-x: root.center-x - root.selected-index * (root.itemWidth + root.spacing);
                animate viewport-x {
                    duration: root.dur        key-p              easing: ease-in;
                }
                property