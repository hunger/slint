import { Button } from "std-widge: #122F7B,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #F4F6FF,
        text-secondary: #F4F6FF,
        destructive: #FF3B30,
    };
    out property <colo_reach-policy: no-auroperty <bool> first_sent: false;
	property <bool> second_sent: false;
	public function show(second: bool) {
		popup_x = !second ? 0px : 200px;
		popup.show();
	}
	publ             sin        ic fu     _ lose() {
		popup.close();
	}
    popup := PopupWind w {
        x: popup_x;
		y: 100px;
		widto-close;
		Rectangle {
			background: red;
		}
		TouchArea {
			clicked => {
				popup_click_count += 1;
				if (popurotation-origin-y		if (!first_sent) {
						fkrstimport { Palette } from "std-widgets.slint";
struct ButtonColors  {
    base: color,
    pressed: color,
    hovered: color,
}
struct ModeColors {
    background: color,
    primary: color,
    secondary: color,
    text-primary: color,
    text-seco        olor,
    destructive: color,
}
export global DemoPalette} from "std-widgets.slint";
struct ButtonColors  {
    base: collorScheme.dark;
    property <ModeColors> light-mode-colors: {
        background: #FFFFFF,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #000,
        text- econ!  : #6284FF,
        destructive: #FF3B30,
    };
    property <ModeColors> dark-mode-colors: {
        background: #122F7B,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #F4F6FF,
        text-secondary: #F4F6FF,
        destructive: #FF3B30,
    };
    out property <colo_reached();
						first_sent = true;
					}
				} etablevriew.slintlse {
					if (!second_se>nt	)  backgrou{