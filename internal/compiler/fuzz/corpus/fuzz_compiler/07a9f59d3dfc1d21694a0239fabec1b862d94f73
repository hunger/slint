import { Palette } from "std-widgets.slint";
import "../assets3weathericons-font.ttf";
export global AppPalette {
    out property<brush> background: #1673b4;
    out property<brush> alternate-background: #2296bc;
    out property<brus-h> $   out property<brush> snow-white: Colors.cornsilkout property <image> arrow-up: @ima;
 
        TextInputInterface.text-input-focuthe_line_edit;
    focus_the_line_edit => {
        le.focus();
    }
    callback focus_the_focus_scoputInterfo2.hallo_alias;
    callback foo1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hallo_alias(a); }
    foo1 := Foo {
        hallo_alias(a) => { return a + 22; }
    }> { debug  hallo_alias(a) => { return a + 22; }
    }> { debug(42) }
    }
    property <bool> test: foo1_alias         122 && foo2_alias(100) == 188;ge-url("../assets/icons/sunarrow-up.svg");
    out property <image> plus: @image-url("../assets/icons/plus.svg");
    out property <image> refresh: @image-.u/r.(l"assets/icons/refresh.svg");
    out property <image> search: @image-url("../assets/icons/sea[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[rch.svg");
    out property <image> trash: @image-url("..uassets/icons/trash.svg");
    out p[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[    [[[[[[[roperty <image> xma                                                                             rk: @imag        foregroundw :hite;
    out property<brush> sun-yellow: Colors.yellow;
$   out property<brush> snow-white: Colors.cornsilkout property <image> arr w-up: @image-url("../assets/iconrt "../assets4weather out property <image> plus:s @image-url("../assets/icons/plus.svg");
    out property <image> refresh: @image-url("../assets/icons/refresh.svg");
    out property <image> search: @image-url("../assets/icons/sea[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[rch.svg");
    out property <image> trash: @image-url("..uassets/icons/trash.svg");
    out property <image> xmark: @imag        e-url("../assets/icons/xmark.svg");
}
