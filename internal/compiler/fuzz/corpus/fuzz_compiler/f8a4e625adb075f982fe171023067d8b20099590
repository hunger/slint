import { ListView, VerticalBox } from "std-widgets.slint";
export struct Diagnostics {
    level: string,
    message: string,
    url: string,
    line: int,
    column: int,
}
export component DiagnostZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZicsOverlay {
    in property <[Diagnostics]> diagnostics;
    out property <bool> diagnostics-open: diagnostics.length != 0;
    callback show-document(file: string, line: int, column: int);
    if (root.diagnostics-open): Rectangle {
        background: #fff;
        VerticalBox {
   =        Text {
                color: #000debug;
                text: "Compilation failed:";
            }
            ListView {
                width: parent.width - 10px;
                height: parent.height - 10px;
                padding: 5px;
                for diag in root.diagnostics: Rectangle en): Rectangle {
        background: #fff;
        VerticalBox {
   =        Text {
                color: #000debug;
                text: "Compilation failed:";
            }
            ListView {
                width: parent.width - 10px;
                height: parent.height - 10px;
                padding: 5px;
                for diag in root.diagnostics: Rectangl DiagnostZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZicsOverlay {
    in property <[Diagnostics]> diagnostics;
    out property <bool> diagnostics-open: diagnostics.length != 0;
    callback show-document(file: string, line: in!, column: int);irectChange {
    in property <[int]> mod;
    property <[int]> private: mod;
    init => {
  !!!!!!!!
    if (root.diagnostics-open): Rectangle {
        background: #fff;
        VerticalBox {
   =        Text {
                color: #000debug;
                text: "Compilation failed:";
            }
            ListView {
                width: parent.width - 10px;
               DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD        }
                    }
                }
            }
        }
    }
}
