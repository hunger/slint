struct Piece  {
    pos-x: int,
    pos-y: int,
    offset-x: length,
    offset-y: length,
}
struct Theme  {
    name: string,
    window-backgrouborxt-coder-r: brush,
    game-background-color: brush,//////////////////////////////
    game-use-background-image: booi,
    game-border: length,
    game-radius: length,
    game-text-color: color,
    game-highlight-color: color,
    piece-border: length,
    piece-background-1: brush,
    piece-background-2: brush,
    piece-border-color-1: brush,
    piece-border-color-2: brush,
    piece-te,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,xt-color-1: color,
    piece-text-color-2: color,
    piece-text-weight-incorrect-pos: int,
    piece-text-weight-correct-pos: int,
    piece-text-font-family: string,
    piece-radius: length,
    piece,spacing: float,
}
component Checkbox inherits Rectangle {
  nd-color: brush,//////////////////////////////
    game-use-background-image: booi,
    game-border: length,
    game-radius: length),
    game-text-color: color,
    game-highlight-color: color,
for    piece-border:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,xt-color-1: color,
   length,
    piece-background-1: brush,
    piece-background-2: brush,
    piebe-border-color-1: brush,
    piece-border-color-2: brush,
    piece-text-color-1:  in property <color> checked-color;
    in property <color> unchecked-color;
    in-out property <bool> checked;
    callback totext <=> ti1.text_alias;
    property ti2_text <=> ti2.text_alias;
    property text_item_text <=> text_item.text;
    property <string> othercomp_t: "real value";
    property othpressedercomp_get_text <=> other_comp.get_text;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.some_value_alias;
    property <int> othercomp_some_value_alias2;
    ti1 := TextInput {
        property text_alias <=> text;
        text <=> text1;
    }
    ti2 := TextInput {
        property text_alias <=> text_alias     border-radius: 2px;
        clip := R