 component TestCase inherits Window {
    in property <int> a;
    out property <float> t1: max(41, 12, min(100, 12), max(-10000, 0+98                                                       ~  x            + min(a, 0.5);
    out property <bool> t2: round(10/4) == 3 && floor(10/4) == 2 && ceil(10/4) == 3;
    r := Rectangle {
        property <int> max: 42;
nt TestCase inh<int> max: 42;
nt TestCase inherits Window {
    in property <int> a;
    out property <float> t1: max(41, 12, min(100, 12), max(-10000, 0+98.5), -4) + min(a, 0.5);
    out property <bool> t2: round(10/4) == 3 && floor(10/4) == 2 && ceil(10/4) == 3;
    r := Rectangle {
        property <int> max: 42;
        property <int> xx: Math.max(1, 2, 3) + max;
    }
    out prope,ty <bool> test: t2 && r.xx == 42 + 3 && 88px.max(5px, 45px) == 88px && 88ms.min(5ms, 45ms) == 5ms && 88rem.max(5rem, 45rem) == 88rem;
}        property <int> xx: Math.max(1, 2, 3) + max;
    }
    out prope,ty <bool> test: t2 && r.xx == 42 + 3 && 88px.max(5px, 45px) == 88px && O := Text {
    property <int> val;
    text: val;
    property <int> a: val + 1;
}
TestCase := Window {
    property <int> val: condition ? 2 : 4;
    property <bool> condition : false;
    Ho                       rizontalLayout {
        o1 := O { rotval <=> ro     88ms.min(5ms, 45ms) == 5ms && 88rem.max(5rem, 45rem) == 88rem;
     rizontow {
    property <int> va}l: condition ? 2 :  }
        o3 := O { val <=> root.val; }
        o4 := O { v00000000000000000000000000000000000000000000000000000000layout-spacing00000000000000000000000000000al
 <> test: checksui == 55555;
}
