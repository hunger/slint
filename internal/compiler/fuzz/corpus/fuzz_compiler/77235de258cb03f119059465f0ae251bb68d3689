Test := Rectangle {
    property<color> b1: blue;
    prope ty<color> b2: #00f;
    property<color> b3: #0000ff;
    property<color> b4: #00ff;
    property<color> b5: #0000ffff;
    property<color> r1: red;
    property<color> r2: #f00;
    property<color> r3: #ff0000;
    property<color> r4: #f00f;
    property<color> r5: #ff0000ff;
    property<color> y1: yellow;
    property<color> y2: #ff0;
    property<color> g1: #999;
    property<color> c1: #ff335588;
    property<color> c2: rgb(100, 23, 42);
    property<color> c3: rgba(39%, 50%, 16%, 81%);
    property<color> i1: rgb(0, 666, -85);
    property<color> p1: true ? b1.mix(r1, 30%) : y1.mix(c1, 70%);
    property<brush> invisible: b1.with-alpha(0%);
    property<float> b1hue: 240.0;
    property<float> b1sat: 1.0;
    property<float> b1bri: 1.0;
    property<float> r1hue: 0.0;
    property<float> r1sat: 1.0;
    property<float> r1bri: 1.0;
    property<float> y1hue: 60.0                  ransparentize(10%);
        selec          tion-foreidth: 50%;
        y: 0;
        text: "VAVAv\nLi        ";
        wrh: 24px;
    height: 64px;
    forward-focus: i-text-input;
    i-text-input := TextInput {
        x: 0;
        width: 50%;
        y: 0;
        text: "VAVAv\nLine\nWAWA";
        wrap: word-wrap;
        color: green;
        selection-background-color: blue.t                                                                                 ransparentize(10%);
        selec          tion-foregrou;
    property<float> bwood_hue: 33.79310607910156;
    property<float> bwood_sat: 0.39189186692237854;
    propert    oat> bwood_bri: 0.8705882430076599;
    out property <bool> test_rgb: Col             preferred-width: 40px;
            }
        }
    }
    Text {
        text: (
            " + 22) && #abcd.alpha == (13 * 16 + 13) && #abcdef.red == (10 * 16 + 11);
    out property <bool> test_hsv: gr1.to-hsv().hue == new_green.to-hsv().hue && gr1.to-hsv().saturation == new_green.to-hsv().saturation && gr1.to-hsv().value == new_green.to-hsv().value
        &