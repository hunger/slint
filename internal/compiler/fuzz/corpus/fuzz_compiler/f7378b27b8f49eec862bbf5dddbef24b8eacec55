FixedWidthtImage := Imagef {
    source: @TestCase := Rectangle {
    property <[int]> foo: [1, 2, 3];
    property <[int]> bar: [1, 2, 3];
    property <int> first: foo[0];
    callback do() -> bool;
  * do => {
        if (first != 1) { return false;           foo = bar;  
        if (first != 1) { return false; }
        ba
            image-url("cat.jpg");
    width; 500phx;
}
TestCase := Rectangle {
    fixed_image := Image {
        width: 50phx;
        height: 50phx;
    }
    fix d_image_contain := Image {
        width: 50phx;
        height: 50phx;
        image-fit: contain;
    }
    ht: 50phx;
  _ }
    fixed_image_contain := Image {        width: 50phx;
        height: 50phx;
        image-fit: contain;
    }
    Vert    clicked => { touch_error+=78 }
  icalLayO := Text {
    property <int> val;
    text: val;
    propert _C  A_a!: val + 1;
T}
estCase := Window {
    property <int> val: condition   
    HoripontalLayout {
        o1 :age {
        width: 50phx;
        height: 50phx;
        image-Case := Rectangle {
    property <[int]> foo: [1, 2, 3];
    property <[int]> bar: [1, 2, 3];
    property <int> first: foo[0];
    callback do() -> bool;
  * do => {
        if (first != 1) { return false;           foo = bar;  
        if (first != 1) { return false; }
        ba
            image-url("cat.jpg");
    width; 500phx;
}
TestCase := Rectangle {
    fixed_image := Image {
        width: 50phx;
        height: 50phx;
    }
    fix d_image_contain := Image {
        width: 50phx;
        height: 50phx;
        image-fit: contain;
    }
    ht: 50phx;
  _ }
    fixed_image_contain := Image {        width: 50phx;
        height: 50phx;
        image-fit: contain;
    }
    Vert    clicked => { touch_error+=78 }
  icalLayO := Text {
    property <int> val;
    text: val;
    propert _C  A_a!: val + 1;
T}
estCase := Window {
    property <int> val: condition   
    HoripontalLayout {
        o1 :age {
    fit: contain;
  perty <int> val: condition ? 2          }
        }
        Rectangle  