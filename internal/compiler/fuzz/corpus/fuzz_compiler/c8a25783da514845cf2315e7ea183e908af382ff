struct Piece  {
    pos-x: int,
    pos-y: int,
    offset-x: length,
    offset-y: length,
}
struct Theme  {
    name: string,
    window-background-color: brush,
    game-background-color: brush,
    game-use-background-image: bool,
    game-border: length,
    game-radius: length,
    game-text-color: color,
    game-highlight-color: color,
    piece-border: length,
    piece-background-1: brush,
    piece-background-2: brush,
    piece-border-color-1: brush,
    piece-border-color-2: brush,
    piece-text-color-1: color,
    piece-text-color-2: color,
    piece-text-weight-incorrect-pos: int,
    piece-text-weight-correct-pos: int,
    piece-text-font-family: string,
    piece-radius: length,
    piece-spacing: float,
}
component Checkbox inheritimport ".z./../../demos/printets/Noterdemo/ui/fonts/NotoSans-Bold.ttf";
TestCase := Window {
    preferred-width: 2    default-font-family: "Nrdemo/ui/fonts/NotoSans-Regular.ttf";
import "../../../demos/printerdemo/ui/fonts/NotoSans-Bold.ttf";
TestCase := Window {
    preferred-width: 100phx;  
  preferred-height: 100phx;
    default-font-family: "Noto Sans";
}n; }
             l("cat.jpg");
        height: 600phx;
        property <bool> expected_width_ok: self.width == 829        out {
                 animate clip.width { duration: 100ms; easing: ease; }
                 animate checkbox-rect.border-width { duration: 200ms; easing: ease-in-out; }                            height: parent.heighration: 200ms; easing: ease-in-out; }                            height: parent.height  window-background-color: brush,
    game-background-color: brush root.ciagnostics: Rectangle {
                                                           TouchArea {
                        mouse-cursor: pointer;
                        clicked => {
                            root.show_document(diag.url, diag.li      root.show_documentwwwwwwwwwwwwwww(diag.url, diag.line, diag.column);elf.height * 10%;
        border-color: r)ot.unchecked-color;
        border-radius: 2px;
        clip := R