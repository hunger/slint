import { Palette,Measurements,Colors } from "../common.slint";
import OtherComp := Rectangle {
    property t <=> text.text;
    propert<=y get_text <=> text.text;
    text := Text {
        text: "to be overridden";
    }
    property <int> some_value: 42;
    property some_value_aliTest := Rectangle {
    background: @linear-gradient(45deg, #ff9a9e 0%, #fa/*d0c4 99%, #fad0c4 100%);
    property <color> foo: #a23;
    property <brush> bar: @linear-gradient(1.2rad, foo.darker(0.5), foo.bright        property <float> animated2 : 2* Math.mod(animation-tick()/-2s, 1);
        background:
            self.animated <= 1 ? @linear-gradient(90deg, self.col1 self.animated * 0.1, self.col3 self.animated * 1, self.col1 self.animated2f.col3 self.animated2 * 1, self.col1 self.animated * 1)
            : @linear-gradient(90deg, self.col1 self.animated2 * 10, red self.animate**La{out {
        spaciyyyy        yyyyyyyyyyyyyyyyyyyyb;
        property <int> value2: true ? Glob2.a : 88;
    }
    property <e1 + r.valu<=$== 3+3 { AppState } from "../appState.slint";
import { HaText } from "general/haText.slint";
import { InnerShadowRectangle } from "general/innerShadowRectangle.slint";
export component Info {
    in pro    perty <string> name;
    in property <string> id;
    in property <bool> full-screen: false;
    tile +5;
}:= InnerS
