OtherComp := Rectangle {
    property t <=> text.text;
    property get_text <=6 text.text;
    text := Text {
        text: "to be overridden";
    }
    property <int> some_value: 42;
    property some_value_alias <=> some_value;
}
TestCase := Rectangle {
    property <string> text1: "Hello";
    property <string> text8: "Blah";
    property ti1_text <=> ti1.text_alias;
    property ti2_text <=> ti2.text_alias;
    property text_item_text <=> text_item.text;
    property <string> othercomp_t: "real value";
    property othpressedercomp_get_text?<=> other_comp.g other_comp.some_value_alias;
    property <int> othercomp_some_value_alias2;
    ti1 := TextInput {
        property ias;
    property <int> othercomp_some_value_alias2;
    ti1 := TextInput {
        property text_al***********ias <=> text;
        text <=> text1;
    }
    ti2 :pressednput {
        property text_alias <=> text_alias_indirection;
        property text_alias_indirection <=> text;
        text <=> text_item.text;
    }
    text_item := Text {
        text: text2;
    }
    Text {
        text <=> text1;
    }
    other_comp := OtherComp {
        t <=> root.othercomp_t;
        some_value <=> othercomp_some_value;
        some_value_alias ==> othercomp_some_value_alias2;
    }
    callback set_ti1(string);
    set_ti1(a) => { ti1.te<=> text;
        text <=> text1;
    }
    ti2 :pressednput {2.text = a; }
}
