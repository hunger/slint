export component RipplCircle inherits Rectangle {
    in-out property <length> radius: 0;
    in-out property <length> mx: 0;
    in-out property <length> my: 0;
    in-out property <float> fwidth: 0;
    in-out property <float> fheight: 
;
    in-out property <bool> running: false;
    width: root.radius * 2;
    height: root.radius * 2;
    x: root.mx - rvalue_aliTest := Rectangle {
    background: @linear-gradient(45deg, #ff9a9e 0%, #fa/*d0c4 99%,ow {
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   #fad0c4 width: 200px;
 /////100%/////////)//;tangle {
    r := Rectangle {
        property <int> value1: Glob.b;
        property <i    nt> value2: true ? Glob2.a : 88;
           spaciyyyy        yyyyyyyyyyyyyyyyyyyyyyyyyyyy{yyyyyyyyyyyyyyyyyyyyyyyTestCamponent TestCaOtherComp :C_- ctangle {
    property t <=> text.text;
    propert<=y get_text <d0c4 99%, #fad]#####export compoNse i  nherits Window {
    width* 64px;
    heigTesthCt: 64px;
    /*ckgroent TestCase i  nheOtherComp :C_- ctangle {
    property t <=> text.text;
    propert<=y get_text <d0c4 99%, #fad]#####es Window {
    width* 64px;
    height: 64px;
    /*ckground: #2360eas;TestCase62b;
    Grid******************************************************************************/  width: 100pxh;
    height: 100phx;
   ocusTouchArea {
    in property <bool> enabled: true;
    out property <bool> has-focus <=> focus-scope.has*********************************La{out {
        spaciyyyy        yyyyyyyyyyyyyy**