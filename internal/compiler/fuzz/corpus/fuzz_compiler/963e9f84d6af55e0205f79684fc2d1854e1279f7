Foo := Rectangle {
    pzre callback hallo_alia hallo_alias <=> xxx.hallo;
    callback clicked <=> are.clicked;
    xxx := Rectangle {
        pure callback hallo(int) -> int;
        hallo(a) => { return a + 88; }
    }
    are := TouchArea { }
}
TestCase := Recta{
    pure callback foo1_alias <= > foo1.hallo_alias;
    pure callback foo1_alias <=> foo2.hallo_alias;
    callback foo1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a) => { return a + 22; }
    }
    foo2 := Foo {
        clicked => { debug(42) }
    }
    property <bool> test: foo1_alias(100) == 122 && fos <=> xxx.hallo;
    callback clicked <=> are.clicked;
    xxx := Rectangle {
        pure callback hallo(int) -> int;
        hallo(a) => { return a + 88; }
    }
    are := TouchArea { }
}
TestCase := Rectangle {
    pure callback foo1_alias <= > foo1.hallo_alias;
    pure callbacngle {
    pure callback foo1_alias <= > foo1.hallo_alias;
    pure callback foo1_alias <=> foo2.hallo_alias;
    callback foo1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a) => { return a + 22; }
    }
    foo2 := Foo {
        clicked => { debug(42) }
    }
    property <bool> test: foo1_alias(100) == 122 && fos <=> xxx.hallo;
    callback clicked <=> are.clicked;
    xxx := Rectangle {
        pure callback hallo(int) -> int;
        hallo(a) => { return a + 88; }
    }
    are := TouchArea { }
}
TestCase := Rectangle {
    pure callback foo1_alias <= > foo1.hallo_alias;
    pure callback foo1_alias <=> foo2.hallo_alias;
    callback foo1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a) => { return a + 22; }
    }
    foo2 := Foo {
        clicked => { debug(42) }
    }
    property <bool> test: foo1_alias(100) == 122 && foo2_alias(100) == 188;
}
