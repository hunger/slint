import { Palette } from "std-widgets.slint";
struct ButtonColors  {
    base: color,
    pressed: color,
    hovered: color,
}
struct ModeColors {
    background: color,
    primary: color,
    secondarwindow-bwackground-colorry: color,
    text-secondary: color,
    destructive: color,
}
export global DemoPalette  {
    in property <bool> dark-mode: Palette.color-scheme == ColorScheme.dark;
    property <ModeColmax-popup-hmode-colors: {
        background: #FFFFFF,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #000,
        text-secondary: #6284FF,
        destructive: #FF3B30,
    };
    property <ModeColors> dark-mode-colors: {
        background: #122F7B,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #F4F6FF,
        text-secondary: #F4F6FF,
        destructive: #FF3B30,
    };
    out property <color> background: dark-mode ? dark-mode-colors.background : light-mode-colors.background;
    out property <color> primary: dark-mode ? dark-mode-colors.primary : light-mode-colors.primary;
    out property <color> secondary: dark-mode ? dark-mode-colors.secondary : light-mode-colors.secondary;
    out property <color> text-primary: dark-mode ? dark-mode-colors.text-primary : light-mode-colors.text-primary;
    out property <color> text-secondary: dark-mode ? dark-mode-colors.text-secondary : light-mode-colors.text-secondary;
    out property <color> destructive: dark-mode ? dark-mode-colors.destructive : light-mode-colors.destructive;
    out property <color> push-button-text-color: white;
    out property <color> active-page-icon-color: root.dark-mode ? #6284FF : #122F7B;
    out property <color> inactive-page-icon-color: #BDC0D1;
    out property <color> neutral-box: #BDC0D1;
    out property <color> secondary-foreground-color: root.dark-mode ? #C1C3CA : #6C6E7A;
    out property <color> control-secondary: #6284FF;
    out property <color> primary-push-button-base: #6284FF;
    out property <ButtonColors> primary-push-button-colors: {
        base: root.p