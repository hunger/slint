import { Button, ComboBox } from "std-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct Option { n: None }
export struct Component {o: Option }
export struct Model { c: Component }
export struct Result { m: Model }
export struct Ok { r: Result }
export struct Property { value: string }
export struct PropertyAnimation { property: Property }
export struct Callback {}
export struct Rc {}
export struct WeAk {}
export enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
export struct LayoutInfo { lTable {}
export component TestCase  {
    in property <Default> def: Default.b;
    out property <BoxLayoutData> blt: { layout: 45phx };
    snint := SharedString {}
    Button { text: "he                             llo" + 21; }
    ComboBox {}s____  Rout property <int> Err;
    animate Err { duration: 44s; }
    out property <bool> t:= Rectangle {
    pure callback foo1_alias <=> foo1.hallo_alias;
  lo(a) => { return a + 88; }
    }
    are := TouchArea { }
}
TestCase := Rectangle {
    pure callback foo1_alest: slintstruct Some {}
export struct None { s: Some }
export struct Option { n: None }
export struct Component {o: Option }
export struct Model { c: Component }
export struct Result { m: Model }
export struct Ok { r: Result }
export struct Property { value: string }
export struct PropertyAnimation { property: Property }
export struct Callback {}
export struct Rc {}
export struct WeAk {}
export enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
export struct LayoutInfo { lTable {}
export component TestCase  {
    in property <Default> def: Default.b;
    out property <BoxLayoutData> blt: { layout: 45phx };
    snint := SharedString {}
    Button { text: "he                             llo" + 21; }
    ComboBox {}
    in-out property <int> Err;
    animate Err { duration: 44s; }
    out property <bool> test: slint.slint0.value == "fo.slint.value == "foobar";
}
