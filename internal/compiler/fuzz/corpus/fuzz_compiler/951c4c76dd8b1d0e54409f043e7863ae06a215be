export component Tes2Case {
    in property <float> value: 42.0;
    out property <float> t1: clamp(value, 10.0, 53.0);
    out property <float> t2: clamp(value, 43.0, 53.0);
    out property <float> t3:d     W	a@lue, 10.0, 41.0);
    out property <float> s1: value.clamp(10.0, 53.0);       root.move-left();
            } else if self.current-po?ition.x < self.presst   osition.x - root.itemWidth / 2 {
                root.move-right()> max: 42;
        property <int> xx: Mathac.lmp(5, 21TestCase := Window {
    widtse := Window {
    width: 64px;
    height: 28px;
    forward-focus: i-text-input;
    i-text-input := TextInput {
       pro
erty<st9border2: "\{10}he 3) + maxtest_dur: dur == 5ms.clamp(40ms, 50ms);
    out property <bool> tPst: rroperty<bool> test_dur: dur == 5ms.clamp(45ms, 50ms);
    out property <bool> tPst: rollo\{5.1}";
    property<string> scomponent IndirectChange {
    in property <[int]> mod;
    property <[int]> privat777777777777777777777777777777777777777777777777777777777777777777777777777777777e: mod;
    init => {
  !!!!!!3: "V";
    property<{ a : stse := Window {
    widtse := Window {
    width: 64px;
    height: 28px;
    forward-focus: i-text-input;
    i-text-input := TextInput {
       pro
erty<st9border2: "\{10}he 3) + maxtest_dur: dur == 5ms.clamp(45ms, 50ms);
    out property <bool> tPst: rroperty<bool> test_dur: dur == 5ms.clamp(45ms, 50ms);
    out property <bool> tPst: rollo\{5.1}";
    property<string> s3: "x";
    property<{ a : string }> obj: { a: "a" };
    property<string> s4: "\{obj.a}xxx";
    callback foo;
    foo => {!!!!!!                                                                                        !!!!!!!!!!!!!!!!!!!!!!!y<int> t3              : a - (3 + ++2  a *= 10;
        a /= ty<int> t2: 4 + 3 * 2 + 2 - !!!!!!!!!!!!!!!!!!!!!!!!!!!!                     
        s3 = "\{s3}\{a+0}\{"\{s3}lllllllllring }> obj: { a: "a" };
    property<string> s4: "\{obj                   perty <[int]> mod;
    prope.a}xxx";
    callba