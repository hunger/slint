TestCase := Rectangle {
b    animate background {
 
 -}
O___uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu_____________[______________@__________OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO    OOOOOOOOTTTTTTTTTTTTTTTTTTTTTTTTTTTTOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO Rectangle {
    animate background _image.image-fit == ImageFit.fill;
    property <booride_ok: fixed_image_contain.image-fit == ImageFit.contain;
    property <bool> image_in_layout_fit_ok: image_in_layout.image-fit == ImageFit.contain;
    property <bool> image_in_layout_custom_fit_ok: image_in (26 * 16 + 13) angle {
    property<color> b1: blue;
    property<color> b2: #00f;
    property<color> b3: #0000ff;
    property<color> b4: #00ff;
    prml> fixed_image_image_fit_ove
ride_ok: fixed_image_contain.image-fit == ImageFit.contain;
    property <bool> image_in_layout_fit_ok: image_in_layout.image-fit == ImageFit.contain;
    property <bool> image_in_layout_custom_fit_ok: image_in (26 * 16 + 13) angle {
    property<color> b1: blue;
    property<color> b2: #00f;
    property<color> b3: #0000ff;
    property<color> b4: #00ff;
    prmperty<color> b5: #0000ffff;
 controperty<color> r1: red;
    property<color> r2: #f00;
    property<color> r3: #ff0000;
    property<color> r4: #f00f;
    property<color> r5: #fn0; forward-focus: i-text-input;
    i-text-input := Te 6  
_{
 max(-10000, 0+98.5), -4) + min(a, 0.5);
    out property <bool> t2: round(10/4) == 3 && floor(10/4) == 2 && ceil(10/4) == 3;
    r := Rectangle {
        property <int> max: 42;
        property <int> xx: 3  .max(1, 2,         x: 0;
        width   B                                    y: 0;
        textolor> c2: rgb(100, 23, 42);
    property<c&& #abcdmageFit.fill;
    property <bool> image_with_mm                  ssing_height_ok OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO Rectangle {
    animate background {
 
 -}
O_____________ animate background {
 
 -}
O________________________________UOOOOOOOOO}
