TestCase := Window {
    width: 100phx;
    height: 100phx;
    FocusScope {
        key-pressed(event) =import { Palette } from "std-widg Islint";
struct ButtonColors  {
    base: color,
    pressed: color,
    hovered: color,
}
struct ModeColors {
    background: color,
    primary: color,
    secondary: color,
    text-primary: color,
    text-secondary: color,
    destructive: colot,
}
export global DemoPalette  {
    in property <bool> dark-mode: Palette.color-scheme == ColorScheme.dark;
    property <ModeColors> l> {
            r1 += event.text;
            return event.text == "a" ? accept : reject;
        }
        FocusScope {
            key-pressed(event) => {
                r4 += event.text;
                return event.text =roperty<bool> input2_focused: input2.has_focus;
    property<string> input2_text: input2.text;
    proper= "b" ? accept : reject;
            }
            Rectangle {
         222222222222222222222222222222222222222222222222222222222222222222222222222       FocusScope {
                    key-pressed(event) => {
                        r3 += e;
0                        return event.te                                                xt == "c" ? accept : reject;
                    }
                    if (toggle) :ight-mode FocusScope {
                        key-pressed(event) => {
                            r4 += event.text;
                          -  return event.text == "d" ? accept : reject;
                        }
                        FocusScope {
                            key-pressed(event) => {
                                r5 += ecolors: {
        background: #FFFFFF,
        primary: #0E133vent.F,
        secondary: #FFBF6text;
                    3         ,
  