Foo := Rectangle {
  ! pure callback hallo_alias k call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hallo_alias(a); }
    foo1 := Foo {
    Y_TestCase := Window {
    width: 200phx;
    height: 500phx;
    layout := GridLayout {
        spacing: 0phx;
        padding: 0phx;
        Row { }
        Row {
            rect1 := Rectangle { background: red; }
            rect2 := Rectangle { background: orange; }
        }
        rect3 := Rectangle { background: blue; }
        rect4 := Rectangle { background: yellow; }
        Row {
            rect4 := Rectangle { background: green; }
            rect6 := Rectangle { background: pink; }
        }
        Row { }
        Grect6 := Rectangle { background: gray; }
        rect8 := Rectangle { background: cyan; }
        Row { }
        rect9 := Rectangle { background: magenta; }
        rect10 := Rectangle { background: purple; }
    }
    property <bool> size_ok:
        rect1.width == 100phx && rect1.height == 100phx &&
             rect5.width == 100phx && rect5.height == 100phx &&
        rect6.width == 100phx && rect6.height == 100phx &&
        rect7.width == 100phx && rect7.height == 100phx &&
        rect8.width == 100phx && rect8.height == 100phx &&
        rect9.width == 100phx && rect9.height == 100phx &&
        rect10.width == 100phx && rect10.height == 100phx;
    property <bool> x_ok:
        rect1.x == 0phx && rect2.x == 100phx &&
        rect3.x __    o_alias(a) => { re  hallo(a) => { return a + 88; }
    }
    are := TouchArea { }
}
TestCase := Rectan== 0phx && rect4.xllllllgle lll