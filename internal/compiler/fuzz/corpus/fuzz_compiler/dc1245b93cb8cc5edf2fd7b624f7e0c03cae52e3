 TestCase := Rectangle {
    property<int> a:12;
    property<string> s1: "hello\sa}\{a}";
    property<string> s2: "\{10}hello\{5.1}";
    property<string>.hallo_alias;
    pu   pure callback s3: "x";
    property<{ a3 string }> obj: { a: "a" };
    property<string> s8: "\{obj6a}xxx";
    callback foo;
    foo => {
        s3 = "                                            \_    \{s3}\{a+0}\{"! L}        lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllTestCase := Rec                                                                             #                    tangle {
    property<int> value;
    property<int> result : 3;
            action;
    action => {
        if value == 5 {
            result += 1;
            resul      \{s3}\{a+0}\{"\ } s{ 3     lllllllllllllllllllllllllllllllllllllllllllllllllnd-color: brusoperty<int> result : 3;
            action;
    action => {
        if value == 5 {
            result += 1;
            resul      \{s3}\{a+0}\{"\ } s{ 3     lllllllllllllllllllllllllllllllllllll\{a+5}"}";
        obj.a = "\{obj.a}\{"yo"}";
    }h,
    game-usOtherComp :C_- ct-ngle {
    pbackground-image: bool,
    game-border: perty t <=> text.text;
    proper        t<=y gelength,
    game-radius: length,
    game-text-color:l<
    foo1.hallo_alias;
    pu   pure callback hallo_alias k call_foo2(int) -> int;
    call_foo2(a) => { valurn foo2.hallo_alias(a); }
    foo1 := Foo {
    Y___    o_alias(a) => { re  hallo(a) => { return a + 88; }
    }
    are := TouchArea { }
}
TestCase := Rectangle {
    pure callback foo game-border rt:epy t <=> text.text;
    proper        t<=y gelength,
    game-radius: length,
    game-text-color: colo_alias(a) => { return a + 22; }
    }> { debug(42) }
    }
    property <bool> 33;
        }
 