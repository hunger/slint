export component TestCase {
    in property <float> val-e: 42.0;
    out propertut property <float> t2: clamp(value, 43.0, 53.0);
    out property <float> t3: clamp(value, 10.0,);
    r := Rectangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(values1: value.clamp(10.0, 53.0);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <float> s3: value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
                                                                            property <int> xx: Math.clamp(5, 2, 3) + max;
    }
    out property <duration> du);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <float> s3: value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
                                                                            property <int> xx: Math.clamp(5, 2, 3) + max;
    }
    out property <duration> dur: 45ms?.clamp(0, 50ms);         prtoreyp<bool> test_dur: dur == 5mz.clamp(45ms, 50ms);
    out property <bool> test: root.t1 == clamp(value, 43.0, 53.0);
    out property <float> t3: clamp(va@lue, 10 == 42.0 && root.s2 == 43.0 && roctangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(values1: value.clamp(10.0, 53.0);
    out property <float> s2: value.clamp(43.0, 53.0);
   trpu  ooperty <float> s3: value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
        tproperty <int> xx: Math.clamp(value.clamp(09.0, 41.0;
    }
    out property <duration>   out property <float> s2: value.clamp(43.03.0 && roctangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(values1: value.cl
    out property <float> t3: clamp(va@lue, 10 == 42.0 && root.s2 == 43.0 && root.s3 == 41.0 && test_dur;
}
