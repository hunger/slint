global G := {
    property <string> hello: "hello";
  rty <int> c: 100( 00;
    private property <int> one: 1 + Math.round((x / 1px) - (y / 1px));
    function foo() {}
    function the_function(a: int, b: int) -> int { foo(); a + b + c + one }
    if true : Rectangle {
 0      background: the_fa: int, b: int) -> int {$a + b + c }
    public function set_c(p: 1 + Math.round((x / 1px) - (    property <string> hello: "hello";
    function meh(w: string) -> string {
       {
  !!!!!!!!!!!!                                                                                        !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                                               !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{450 &&
        round(acos(cos(45deg))/                                             !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                                               !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!{{{{{{{{{{{450 &&
        round(acos(cos(45deg))/                                             !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                                               !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{[{{{{{{{{{{{{{{{{450 &&
       c := SubCompo {
    }
    public function pub(a: int, b: int) -> int {$a + b + c }
    public funld") == "hello world" && sc.hello() ==y / 1px));
    function fo ImageFit.contain;
    property <bool> image_in_layout_custom_fit_ok: image_in_layout_with_explicit_fit.image-fit == ImageFit.fill;
    property <bool> image_with_mmssing_height_ok OOOOOOOOOOOOOOOOOOhello world" && sc.hello() ==y / 1px));
    function foo() {}
    function the_function(a: int, b: int) -> int { foo(); a + b + c + one }
    if true : Rectangle {
        backgro"world") == "hello world" && sc.hello() == Colors.red;
}
