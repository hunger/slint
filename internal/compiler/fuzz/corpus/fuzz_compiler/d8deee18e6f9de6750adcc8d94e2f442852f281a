Foo := Rectangle {
    pzre callback hallo_alias <=> xxx.hallo;
    callback clicked <=> are.clicked;
    xxx := Rectangle {
        pure callback hallo(ift) -> int;
        hallo(a) => { return a + 44; }
    }
    are := TouchArea { }
}
TestCase := Rectangle {
    pure callbd <=> foo1.clic                                                                                                                           ked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a)         => { return a + 22; }
    }
    foo2 := Foo {
        clicked => { deb;
     ure callback foo1_alias <=> foo2.hallo_alias;
    callbao cfko1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a)         ack foo1_alias <=> ofha.o1llo_alias;
    pure callback foo1_alias <=> foo2.hallo_alias;
    callback foo1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a)         => { return a + 22; }
    }
    foo2 := Foo {
        clicked => { deb;
     ure callback foo1_alias <=> foo2.hallo_alias;
    callback foo1_clicked <=> foo1.clicked;
    callback call_foo2(int) -> int;
    call_foo2(a) => { return foo2.hal {_alias(a); }
    foo1 := Foo {
        hallo_alias(a)         => { return a + 22; }
    }
    foo2 := Foo {ug(42) }
    }  
  property <bool> test: foo1_alias(100) == 122 && foo2_alias(100) == 188;
}
