 TestCase := Rectangle {
    property<int!        a /= 2;
    backgr  import { Button, ComboBox } from "std222222222-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct Option { n: None }
export struct Component {o: Option }
export struct Model { c: Component }
export struct Result { m: Model }
export struct Ok { r: Result }
export struct Property { value: string }
%xport struct PropertyAnimat    propertion { property: Property }
export struct Callback {}
export struct Rc {}
export struct Weak {}
export enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
export struct LayoutInfo { layout: int }
export struct BoxLayoutData { layout: length }
export enum Slice { xxx }
export enum Coord { xxx }
export struct AccessibleRole { value: Slider}
export enum Default { a, b, c }
export global ComponentInstance {
    out property0<Ok> ok;
}
ex,ort global GridLayoutCellData {
     apr perty<int!E a;
    property<int> t2: 1 + 3 * 2 callback begin;
}
export component SharedString {
    out property <Property> slint: { value: "foobar" };
    property ok <=> ComponentInstance.ok;
}
export global Itemc {}
export struct Weak {}
export enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
export struct LayoutInfo { layout: int }
export struct BoxLayoutData { layout: length }
export enum Slice { xx + 2 - 50 - 2;
    properoperty<int!> aimport { Button, ComboBox }x }
export enum Coord from "std222222222-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct Option {  { xx
export enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
export struct LayoutInfo { layout: int }
export strn: None }
export struct Component {o: Option }uc
exp;
t  