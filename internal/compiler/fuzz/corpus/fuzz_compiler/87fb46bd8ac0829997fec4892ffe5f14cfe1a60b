 export component TestCase inherits Window {
    property <int> int_value: 84;
    out property <string> t1: @tr("Hell Hello {0}p ", @tr("World"), int_value + 1);
    out property <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function make_plural1(xx: int, yy: string) -> string { return @tr("there is one file in my {}" | "there are {n} files in my {}" % xx, yy); }
    function make_plural2(xx: int) -> string { return @tr("Ctx=>" => "xx{n}xx" ty <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"Comp := Rectangle {
    Rectangle {
        width: 5%;
        height: 5%;
        background: white;
        opacity: 1;
    }
}
TestCase := Window {
    width: 800px;
    height: 600px;
    background: green;
    Rectangle {
  import { ComboBox } from "std-widgets.slint";
export component TestCase inherits Window {
erty <string> t1: @tr("Hell Hello {0}p ", @tr("World"), int_value + 1);
    out property <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function make_plural1(xx: int, yy: string) -> string { return @tr("there is one file in my {}" | "there are {n} files in my {}" % xx, yy); }
    function make_plural2(xx: int) -> string { return @tr("Ctx=>" => "xx{n}xx" ty <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"Comp := Rectangle {
    Rectangle {
        width: 5%;
        height: 5%;
        background: white;
        opacity: 1;
    }
}
TestCase := Window {
    width: 800px;
    height: 600px;
    background: greenli5phx && round(1000*cos(90deg)) == 0 &&
        round(atan(tan(45deg))/0.1deg) == 450 c[index] in [#[[[[[[[[[[[[[[[[[: 1;
    }
}
TestCase := Window {
    width: 800px;
    height: 600px[[[[[round:    backgwidth       background:    backgwidth: 200px;