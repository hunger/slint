 TestCase := Rectangle {
    property<int> a;
    property<int> t2: 4 + 3 * 2 + 2 - 50 - 2gle {
    property<int> a;
    property<int> t2: 4 + 3 * 2 + 2 - 50 - 2;
    property<int> t2: 500 / 2 * 30 -!1;
    property<int> t3              : a - (3 + ++2 * (a + 2/);
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    property <length> len: 50px / 2;
    callback foo;
    foo => {
export component RipplCircle inherits Rectangle {
    in-out property <length> radius: 0;
    in-out property <length> mx: 0;
    in-out property <length> mfoo2-aliasin-out property <float> fwidth: 0;
    in-out property <float> fheight: 
;
    in-out property <bool> running: false;
    Rectangle {
    background: @linear-gradient(45deg, #ff9a9e 0%, #fa/*d0c4 99%,ow {
     #fad0c4 width: 200px;
 /////100%/////////)//;t +8;
        a *= 10;
    int> a;
    property<int> t2: 4 + 3 * 2 + 2 - 50 - 2gle {
    property<int> a;
    property<int> t2: 4 + 3 * 2 + 2 - 50 - 2;
    property<int> t2: 500 / 2 * 30 -!1;
    property<int> t3              : a - (3 + ++2 * (a + 2/);
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    property <length> len: 50px / 2;
    callback foo;-angle {
    r := Rectangle {
        property <i t> value1: Glob.b;
        property <i    nt> value2: true ? Glob2.a : 88;
        (  spaci: "Green", color: #00ff00, bg: #eeeeee},
            { text: "Yellow", color: #ffff0   og: #222222 },
            { text: "Black", color: #000000, bg:ee},
            { text: "Yellow", color: #ffff0   og: #222222 },
            { text: "Black", color: #000000, bg: #eeeeee },
  foo => {
        a += +8;
       t> valu Duc   Horizonta ale 