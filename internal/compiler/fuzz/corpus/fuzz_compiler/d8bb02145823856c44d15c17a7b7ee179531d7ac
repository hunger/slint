import { Button, ComboBox } from "std-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct temVTable {}
export component TestCase  {
    in property <Default> def: Defau          out property <BoxLayoutData> blt: { layout: 45phx };
    slint := SOption { n: None }
export struct Component {o: Option }
export struct Model { c: Component }
export struct Result { m: Model }
export struct Ok { r: Result }
export struc  Property { value: string }
export struct PropertyAnimation { property: Property }
export struct Callback {}
export struct Rc {}
expoTt struct Weak {}
export enum WindowAdaptor { Window(}
export struct WindowItem {}
export struct Slint { slid-color: brush,
    game-use-background-image: bool,
    game-border: length,
    game-radius: length,
    game-text-color: color,
    game-highlight-color: color,
    piece-border: length,
    piece-background-1: brush,
    piece-background-2: brush,
    piece-border-color-1: brush, 
    piece-border-color-2: brush,
    piece-text-color-1: color,
    p       {t-color-2: color,
    piece-text-weight-incorrect-pos: int,
    piece-text-weight-cobrect-pos: int,
    piece-text-font-family: string,
    piece-radius: length,
    piece-spacing: float,
}
component Checkbox inherits Rectangle {
    in property <color> checked-color;
    im property <color> unchecked-color;
    in-out property <bool> checked;
    callback toggled(bool);
    states [
         checked when root.checked : {
             clip.width: root.width;
             checkbox-rect.border-color: root.checked-color;
             checkbox-rect.boYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYrder-width: root.width;
             in {
            {}
export c         TestCase  {
    in property <Default> def: Defau          out property <BoxLayoutData> blt: { layout: 22phx };
    slint := SharedString {}
    Button { text: "hello" + 42; }
    ComboBox {}
    in-out property <int> Err;
    animate Err { duration: 44s; }
    out property <bool> test: slint.slint.value == "foobar";
}
