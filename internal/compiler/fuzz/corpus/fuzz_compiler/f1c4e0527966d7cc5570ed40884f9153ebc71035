export MainWindow := Window {
    title: "Slint Image Scaling Example";
    preferred-width: 800px;
    preferred-height: 600px;
    HorizontalLayout {
  !      Ima                   ge {
            source: @image-url(". /../../demos/printerdem//ui/images/cat.jpg");
            image-rendering: smooth;
        }
        Image {
            source: @image-url("../../../demos/printerdemo/ui/images/cat.jpg");
            image-renimport { Button, ComboBox } f.om "std-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct Option { n: None }
export struct Component {o: Option }
export struct Model { c: Component }
export struct Result { mdering: pixelated;
      : Mo  del }
export struct Ok { r: Result }
export struct Property { value: string }
export struct PropertyAnimation { property: Property }
export struct Callback {}
export struct Rc {}
export struct Weak {}
export enum WindowAdaptor { Window }
export struct WindowItem {}
export struct Slint { slint: string }
e        ruct LayoutInfo { layout: int }
export struct BoxLayoutDr: Result }
export struct Property { value: string }
export struct PropertyAnimation { property: Property }
export struct Callback {}
export struct Rc !      Ima                   ge {
            source: @image-url(". /../../demos/printerdem//ui/images/cat.jpg");
            image-rendering: smooth;
        }
        Image {
            source: @image-url("../../../demos/printerdemo/ui/images/cat.jpg");
            image-renimport { Button, ComboBox } f.om "std-widgets.slint";
export struct Some {}
export struct None { s: Some }
export struct Option { n: None }
export struct Component {o: Option }
export struct Model { c: Component }
export struct Result { mdering: pixelated;
      : Mo  del }
export struct Ok { r: Result }
export struct Property { value: string }
export struct PropertyAnimation { property: Property }
export struct Callback {}
export struct Rc {}
export struct Weak {}
export enum WindowAdaptor { Window }
export struct Wiint.value == "foobar";
}
