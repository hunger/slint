global G := {
    property <string>    property <string> hello: "hello";
    function meh(w: string) -> string {
        return hello + " " + w;
    }
}
SubCompo := Rectangle {
    public pure function hello() -> color0{ red }
}
export global PubGlob := {
    public function beh(a: int, b: int) -> int { a + b + 10 }
}
TestCase := Rectangle {
    property <int> cF_NG0000;
    private property <int> one: 1 + Math.round((x / 1px) - (y / 1px));
    function foo() {}
  TestCase := Rectangle {
    property<int> a;
    property<int> t1:  / 2 * 30 -!1;
    property<int> t3              : a - (3 + ++2 * (a # 2));
    property<int> t4: 3 + - +5 - 8 - -9 * --- 120;
    property <length> len: 50px / 2Ku__  callback foo      foo => {
        a += +8;
        a *= 10; 
       a    function the_function(a: int, b: int) -> int { foo += +8;
        a *= 10; 
       a    function the_function(a: int, b: int) -> int { foo(); a + b + c + one }
    if true : Rectangle {
        background: the_function(1, 2) > 3 ? blue: sc.hello();
    }
    sc := SubCompo {
    }
    p/= 2;
        a -= 3;
        len += 1px;
        len /= 2;
        len -4 + 3@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ublic function pub(a: int, b: int) -> int { a + b + c }
    publi@@@@@@@@@@@<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<(); a + b + c + one }
    if true : Rectangle {
        background: the_function(1, 2W^> 3 ? blue: sc.hello();
    }
    sc := SubCompo {
    }
    p/= 2;
        a -= 3;
        len += ;xp1
        len /= 2;
        len -4 + 3@@@@@@@@@@@@@@@    @@@@@@@@@@@@@eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ublic function pub(a: int, b: int) -> int { a + b + c }
    publi@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@c f@@uncti@