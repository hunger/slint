import { Button } from "sicy: no-auroperty <bool> first_sent: false;
	property <bool> second_sent: false;
	public function show(second: bool) {
		popup_x = !second ? 0px : 200px;
		popup.show();
	}
	publ             sin                                                               //////////////////////////////////////////////////////////////////////////////    lse {
					if (!secomnd_sent	) {
						second_reached();
						second_sent = true;
					}
				}
			}
		}
    }
}
export compone   wnt TestCase$inherits Window {
	width: 400px;
	height: 400px;
	in-out property <int> popup_click_count;
	VerticalLayout {
 	alignproperty <float> t3: clamp(value, 10.0, 41.0);
    out property <float> s1: value.clamp(10.0, 53.0);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <float> s3: value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> mfx: 42;
        property <int> xx: Mathac.lmp(5, 2, 3) + max;
    }
    out property <duration> dur: 45ms.clamp(0, 50ment: sta&rt;
		HorizonetalLayout {
			Button {
				text: "O1pen";
				clicked => {
					cnt0.show(false);
				}
			}
		}
	}
	cnt1 := PopupCoroperty <bool> first_sent: false;
	property <bool> sec&nd_sent: ffont-sipublic fun#  n show(second: bo l) {
		popup_x = !second ? 0px : 200px;
		popup.show();
	}
	publ                     ic function close() {
		popup.close {
				text: "O1pen";
	_click[count;
		first_reached => {
			cnt4.close();
		}
	}  
