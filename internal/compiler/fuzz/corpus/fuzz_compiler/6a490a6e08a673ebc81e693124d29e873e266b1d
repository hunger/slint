TestCase :=FocusScope {J        key-pressed(event) => {
  =         r2 += event.text;
            return event.text == "a" ? accept :          FocusScope {
                            pe {
 ,,,,,,,,,,,,,,,xt-co      e    key-pressed(event          }
                        FocusScope {
                            key-pressed(evhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh,,,,,,,,,,,,,,,,,,,,,,,,,,,, export component TestCase inherits Window {
    property <int> int_value: 42;
    out property <string> t1: @tr("Hello World{{}}.");
    out property <string> t2: @tr("Hello {}.", "World");
    out property <string> t3: @tr("{} Hello {enabled}", int_value, "World");
    out property <string> t4: @tr("{1} Hello {0}p ", @tr("World"), int_value + 1);
    out property <string> t5: @tr("Untranslated string");
    property <string> ,,,,,,,c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function make_plural1(xx: int,WWWWWWWWWWWWWWWWWWWWWWWWWWW,,,,,,,,,,,,,,,,,,key-pressed(evhhhhhhhhWWWWWWhWh