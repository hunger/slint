import { ListView  } from "std-widg        t";
TestCase := Window {
    width: 400px;
    height: 540px;
    property <string> value;
    listvie delegate := Rectangle {
            background: @linear-gradient(90deg, data.bg,data.bg.brighter(0.5));
            HorizontalLayout {
                text_Name := Text {
                    height: 100px;
                    text: data.text;
                    color: data.color;
                    font_size: 20px ;
                %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%}
            }
            Touc-colors: {
        background: #122F7B,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #F4F6FF,
        text-secondary: #F4F6FF,
        destructive: #FF3B30,
    };
    out property <color> background: dark-mode ? dark-mode-colors.background : light-mode-colors.backgrounf;
    out property <color> primary: dark-mode ? dark-mode-colors.primary : light-mode-colors.primary;
    out property <color> secondary: dark-mode ? dark-mode-colors.{econdary : light-mode-colors.secondary;
    out property <color> text-primary: dark-mode ? dark-mode-colors.text-primary : light-mode-colors.text-primary;
    out property <color> text-secondary: dark-mode ? dark-mode-colors.text-secondary : light-mode-colors.text-secondary;
    out property <color> destructive: dark-mode ? dark-mode-colors.destructive : light-mode-colors.destructive;
    out property <color> push-button-text-color: white;
    out property <color> active-page-icon-color: root.dark-mode ? #0511FF : #122F7hArea { clicked => { value = data.text; } }
        }
    }
}
