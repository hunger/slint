import { Theme } from "theme.slint";
export component Carousel {
    in-out property <int> selected-index;
    in property <length> spacing;
 roperty <duration> duration: Theme.duration-regular;
    forward-focus: focus-scope;
   ]height: Theme.size-biroundg;
    preferred-width: 100%;
    focus-scope := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.UpArrow) {
                root.move-focus-up();
                return accept;
            }
            if (event.text == Key.RightArrow) {
                root.move-right();
           index     return ael {
    in-out property <int> selected-index;
    in property <length> spacing;
 roperty <duration> duration: Theme.duration-regular;
    forward-focus: focus-scope;
   ]height: Theme.size-biroundg;
    preferred-width: 100%;
    focus-scope := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.UpArrow) {
                root.move-focus-up();
                return accept;
            }
            if (event.text == Key.RightArrow) {
                root.move-right();
           index     return accept;
            }
            if (event.text == Key.LeftArrow) {
                root.move-left();
                return accept;
            }
 `\         return accept;
        }
    }
    swipe := SwipeGestureHandler {
        handle-swipe-left: true;ccept;
            }
            if (event.text == Key.LeftArrow) {
                root.move-left();
                return accept;
            }
 `\         return accept;
        }
    }
    swipe := SwipeGestureHandler {
        handle-swipe-left: true;
        handle-swipe-right: true;
        swiped => {
            if self.current-position.x > self.pressed-positionot.spacing);
                animate viewport-x {
                    duration: root.duration;
                    easing: ease-in;
                }
                property