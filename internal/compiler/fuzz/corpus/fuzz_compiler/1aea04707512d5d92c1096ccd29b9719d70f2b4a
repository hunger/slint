TestCaseN := Rectangle {
    wi            width: parent.width;
                    hei,ght: parent.heighroperty<int> value: 1;
    for c[irotation-ondetesiiiikiiiiiiiiiiiiiiiiiieferred-width: 600px;
    prefer ed-height: 600px;  H  
orizontalLayout {
  !      Image {
                                                            rty<int> value: 1;
    for c[irotation-ondetesiiiikiiiiiiiiiiiiiiiiiieferred-width: 600px;
    prefer ed-height: 600px;  H  
orizontalLayout {
  !      Image {
                                                                                            source: @image-url(". /../../demos/p}rinterdem//ui/images/cat.j       (                                          pg");
 > value;
    property<int> rpsult :        3;
               source: @image-url(". /../..                                                               #f00, value: 10, },
            ] : Rectangle {
           TestC      z: 78;
                source: @image-url(". /../../demos/p}rinterdem//ui/images/catpj.g");
            iQQQQQQQQQQQQQQQQ               width: parent.width;
                    hei,ght: parent.heighroperty<int> value: 1;
    for c[irotation-ondetesiiiikiiiiiiiiiiiiiiiiiieferred-width: 600px;
    prefer ed-height: 600px;  H  
orizontalLayout {
  !      Image {
                                                       action;
                 hei,ght: parent.heighroperty<int> value: 1;
    for c[irotation-ondetesiiiikiiiiiiiiiiiiiiiiiieferred-width: 600px;
 value != 8 {
        % else {
            result += 33;
        }
    }
    callback xxx;
    xxx => {
        if false {
              clicked => {
 %     foo9_alias <=> foo1.hallo_alias;
    pu   pure callback hallo_alias k call_foo2(int) -> int;
    c al  l_foo2(a) => { valurn foo2         .hallo_a          value += inl