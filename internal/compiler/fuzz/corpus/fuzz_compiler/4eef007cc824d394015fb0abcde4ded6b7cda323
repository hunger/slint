Foo := Rectangle { := Rectangle {
    pure callback hallo_alias <=> xxx.hallo;
    callback clicked <=> are.clicked;
    xxx := Recta
    are        pure callback hallo(intffffffffffffff := TouchAre(intffffffffffffffffffffffffffffff5ffffffffffffffffffffffffffffffffffffffffffffffffffff are          pure callback hallo(intffffffffffffff :=
    pure callback hallo_alias <=> xxx.hallo;
    callback clicked <=> are.clicked;
    xxx := Recta
    are        pure callback hallo(intffffffffffffff := TouchAre(intffffffffffffffffffffffffffffff5ffffffffffffffffffffffffffffffffffffffffffffffffffff are          pure callback hallo(intffffffffffffff := TouchAre(intffffffffffffffffffffffffffffff0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) -> int ; 
      hallo(a) => { re=turn a +s88; }
    }
    are := TouchArea { }
}
TestCase := Rectangle {
    pu hallo_alias <=    call    _foo2(a) => { return foo2.hallo_alias(a); }
    foo1 := Foo {
    Y___    o_alias(a) => { re   {
        key-pressed(event) => {
            if (event.text == Key.UpArrow) {ffffffffff := TouchArea { }
}
TestCase :=fffff 