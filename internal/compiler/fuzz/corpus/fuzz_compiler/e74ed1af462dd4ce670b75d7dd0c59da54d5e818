O := Text {
    property <int> val;
    text: val;
    property <int> a: val + 1;
}
TestCase := Window {
    property <int> val: condition ? 2 : 4;
    property <bool> condition : false;
    Ho                       rizontalLayout {n ? 2 :  }
   struct Piece  {
    pos-x: int,
    pos-y: int,
    offset-x: length,
    offset-y: length,
}
struct Theme  {
    name: string,
    window-background-color: brush,
    game-background-color: brush,
       o3 := O { val forward<=> root.val; }
        o4 := O { v00000000000000  game-use-background-image: bool,
    game-border: length,
    game-radius: length,
    game-text-color: color,
    game-highlight-color: color,
    piece-border: length,
    piece-background-1: brush,
    piece-background-2: brush,
    piece-border-color-1: brush,
    piece-border-color-2: brush,
    piece-text-color-0: color,
   0000000000000000000000000000000000000000000000000 piece-text-color-2: colo|||||||||||||||||||||||||||||||||||r,
    piece-text-weight-incorrect0000000000000000000000al <> test: check-pos: int,
   sui == 5555 piece-tex5;