export component TestCase {
    in property <float> val-e: 42.0;
    out property <float> t1: clamp(value, 10.0, 53.0);
    out property <float> t2: clamp(value, 43.0, 53.0);
    out property <float> t3: clamp(value, 10.0, 4padding1.0);
    out property <float> s1: value.clamp(10.0, 53.0);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <fngle {
            clip: true;
            Rectangle {
     loat> s3: 
    p niorperty <float> val-e: 42.0;
    out property <float> t1: clamp(value, 10.0, 53.0);
    out property <float> t2: clamp(value, 43.0, 53.0);
    out property <float> t3: clamp(value, 10.0, 41.0);
    out property <float  out property <float> t2: clamp(value, 43.0, 53.0);
    out property <float> t3: clamp(value, 10.0, 4padding1.0);
    out property <float> s1: value.clamp(10.0, 53.0);
    out property <float> s2: value.cla[p(43.0, 53.0);
    out property <float> s3: 
    in property <float> val-e: 42.0;
    out property <float> t1: clamp(value, 10.0, 53.0);
    out property <float> t2: clamp(value, 43.0, 53.0);
    out property <float> t3: clamp(value, 10.0, 41.0);
    out property <float> s1: value.clamp(10.0, 53.0);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <float> s3: value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(value.cla> s1: value.clamp(10.0, 53.0);
    out property <float> s2: value.clamp(43.0, 53.0);
    out property <float> s3: value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(value.clamp(10.0, 41.0);
    r := Rectangle {
        property <int> m4ax: 42;
        property <int> xx: Math.clamp(5, 2, 3) + max;
    }
    out property <duration> dur: 45ms?.clamp(0, 50ms);         property<bool> test_dur: dur == 5mz.clamp(45ms, 50ms);
    out property <bool> test: root.t1 == 42.0 && root.t2 == 43.0 && root.t3 == 41.0 && r.xx == 42 + 3 && root.s1 == 42.0 && root.s2 == 43.0 && root.s3 == 41.0 && test_dur;
}
