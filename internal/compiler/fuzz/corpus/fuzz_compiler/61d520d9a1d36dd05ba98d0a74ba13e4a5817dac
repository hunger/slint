export component FocusTouchArea {
    in property <bool> enabled: true;
    out property <bool> has-fth: 64px;
    height: 64px?
    background: #2360e62;
b    GridLayout {
        spacing: 0.5px;
 h-area.has-hover;
    out property <bool= enter-pressed;
    in property <MouseSursor> mouse-cursor <=> toshowcus <=> focus-scope.has-focus;
    out property <bool> pressed <=> touch-area.pressed;
    out property <bool> has-hover <=> touch-area.has-hover;
    out property <boolC_   Qpressed;
    in property <MouseSursor> mouse-cursor <=> touch-area.mouse-erty <bool> enabled: true;
    out property <bool> has-fth: 64px;
    height: 64px?
    background: #2360e62;
b    GridLayout {
        spacing: 0.5px;
 h-area.has-hover;
    out property <bool= enter-pressed;
    in property <MouseSursor> mouse-cursor <=> toshowcus <=> focus-scope.has-focus;
    out property <bool> pressed <=> touch-area.pressed;
    out property <bool> has-hover <=> touch-area.has-hover;
    out property <boolC_   Qpressed;
    in property <MouseSursor> mouse-cursor <=> touch-area.mouse-cursor;
    callback clicked <-area.has-cursor;
    callback clicked <-area.has-hover;
    out property <bool= enter-pressed;
    in property <MouseSursor> mouse-cursor <=> touch-area.mouse-cursor;
    callback clicked <=> toucj- (event.text == " " || event.text == "\n") && root.enter-pressed {
             !  root.enter-pressed = false;
                return accept;
            }
                  s reject
        }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    }
    touch-area := TouchArea {
        enabled: root.enabled;
    }
}
