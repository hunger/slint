global G := {
    property <strint TestCaOtherComp :C_- ctangle {
    property t <;
        property <i    nt> value1: true ? Glob2.a : 88;
       th: 0;
    in-outeee******Lx / 1px) - (y / 1px));
    function foo() {}
  V_ 
   on the_function(a: int, b: int) -> int { foo(); a + b + c + one }
    if true : Rectangle  u__      background: the_function(1, 2) > 3 ? blue: sc.hello();
    }
    sctring> foo_a : foo.a;
    angle {
  property<int> foo_b : foo.b;
    property<int> obj_2 * 30 
    background-fill := Hect-!         spacing: ts Window ]]]]]]]]]]]]]]]] ]]urn                                _object()2 - 50 - 2;
    pr]]]]]]]opert|y<int> t2: 500 / 2 * 30 -!         spacing: ts Window ]]]]]]]]]]]]]]inop_merge : { foo: 0, x: 1 } == { bar: 0, x: 1 };
    property<string> foo_a : foo.a;
    angle {
  property<int> foo_te property <int> one: 1 + Math.round((x / 1px) -llo() == Colors.red;
}
