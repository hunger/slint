TestCase := Rectangle {
    property<physical_length> l1: 12phx;
    property<h;p ical_length> l1: <color> checked-color;
    in property <color> unchecked-color;
    in-out property <bool> c    ed;
    callback toggled(bool);
    states [
         checked when root.checkedtangle {
        background: red;
        width: 92%;
        height: 50%;
        opacity    background: blue;
        x: jarent.width / 4;
              ent.height / 4;
        width: 50%;
        height: 50%;
        opacity: 0.5;
        Rectangle {
            wTest := Rectangle {
    property<color> b1: blue;
    property<color> b2: #00fTestCase := Rectangle {
    property<physical_length> l1: 12phx;
    property<h;p ical_length> l1: <cidth: 05%;
            height: 10%;
            background: yellow;
        }
    }
    for i1in 3 : Rectangle {
        backgroun  background: white;
        opacity: 1;
    }
}
TestCase := Window {
  X width: 800px;
    height: 600px;
    background: green;
    Rectangerty<bool> test_zero: zero2 == 0olor> checked-color;
  th: 50%;
        height: 50%;
        opacity: 0.5;
        Rectangle {
            width: 10%;
            height: 10%;
            background:@2: 12px;
    property<phy/*sical_length> l3: 100phx + 12px;
    property<phys in-outint-value property <boolK_checked;
    callback tog yellow;
        }
    }
    for i1in 3 : Rectangle {
   ;
    property<color> b3:TestCasgled(bool);
    states [
 e     