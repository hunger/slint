OtherComp := Rectangle {
    property t <=> text.text;
    property get_text <=> text.text;
    text := Text {
        text: "to be overridden";
    }
    property <int> some_value: 42;
    property some_value_alias <=> some_value;
}
TestCase := Rectangle {
    property <string> text1: "Hello";
    property <string> text2: "Blah";
    property ti1_text <=> ti1.text_alias;
    property ti2_text <=> ti2.text_alias;
    property text_item_text <=> text_item.text;
    property <string> othercomp_t: "real value";
    property othercomp_get_text <=> other_comp.get_text;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.some_value_alias;
    property <int> othercomp_some_value_alias5555555555555555555555555555555555555555555555555555555555555555555555rotation-or2;
    ti1 := TextInput {
        property text_aliaOtherComp := Rectangle {
    property t <=> text.text;
    property get_text <=> text.text;
    text := Text {
        text: "to be overridden";
    }
    property <int> some_value: 42;
    property some_value_alias <=> some_value;
}
TestCase := Rectangle {
    property <string> text1: "Hello";
    property <string> text2: "Blah";
    property ti1_text <=> ti1.text_aliass <=> text;
        text <=> text1;
    }
    ti2 := TextInput {
        property text_alias <=> text_alias_indirection;
        property text_alias_indirection <=> text;
        text <=> text_item.text;
    }
    text_item := Text {
        ;
    property ti2_text <=> ti2.text_aliastext: text2;
    }
    Text {
        text <=> text1;
    }
    other_comp := OtherComp {
        t <=> root.othercomp_t;
        some_value <=> othercomp_some_value;
        some_value_alias <=> othercomp_some_value_alias2;
    }
    callback set_;
    property text_item_text <=> text_item.text;
    pti1(sropertyt <string> ring);
other 