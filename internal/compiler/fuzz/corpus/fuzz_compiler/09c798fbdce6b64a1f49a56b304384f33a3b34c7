component IndirectChange {
    in property  [int]!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!!!!!#2360e62;
b    GridLayout {
        spacing: 0.5px;
 h-area.has-h> mod;
    property <[int]> pravate: mod;
    init => {
        private[rectChange { mod: m1; }
    out property <int> t1: m1[0];
    uot property <int  callback clicked <=> toucj-area.clicked;
    for   $         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                 width: 64px;
    height: 64px;
    background: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!!!!!#2360e62;
b    GridLayout {
        spacing: 0.5px;
 h-area.has-hover;
    out property <bool= enter-pressed;
    in property <MouseSursor> mouse-cursor <=> troouch-area.mo                     width:,6toucj-area.clicked;
    for   $                          width: 64px;
    height: 64px;
    background: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!!!!!#2360e62;
b    GridLayout {
        soacing: 0.5px;
 h-area.has-hover;
    out property <bool= enter-ea.mo                     width: 64px;
    height: 64px;
    background: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                 width: 64px;
    height: 64px;
    background: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!!!!!#2360e62;
b    GridLayout {
        spacing: 0.5px;
 h-area.has-hover;
    out property <bool= enter-pressed;
    in property <MouseSursor> mouse-cursor <=> troouch-area.mo                     width: 6toucj-area.clicked;
    for   $                          width: 64px;
    height: 64px;
    background: !!!!!!!! 64px;
    background: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !!!!!!use-cursor;
    callback clicked <=> toucj> t2: m2[0];
    out property <bool> test: t1 == 5+1 && t2 == 8;
}
