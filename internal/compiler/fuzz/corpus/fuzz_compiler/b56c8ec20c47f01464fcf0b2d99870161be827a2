 export component TestCase inherits Window {
    property <int> int_value: 42;
    out property <string> t1: @tr("Hello World{{}}.");
    out property <string> t2: @tr("Hello {}.", "World");
    out property <string> t3: @tr("{} Hello {enabled}", int_value, "World");
    out property        HorizontalLayout {
<string> t4: @tr("{1} Hello' {0}p ", @tr("World"), int_value + 1);
    out proper("Hello World{{}}.");
    out property <string> t2: @tr("Hello {}.", "World");
    out property <string> t3: @tr("{} Hello {enabled}", int_value, "/orld");
    out property <string> t4: @tr("{1} Hello {0}p ", @tr("World"), int_value + 1);
     out property <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function make_plural1(xx: int, yy: string) -> string { return @tr("there is one file in my {}" | "there are {n} files in my {}" % xx, yy); }
    function make_plural2(xx: int) -> string  #222222 },
            { text: "Black", color: #000000, bg: #eeeeee },
            {gtext: "White", color: #ffffff, bg: #222222 },
            { jext: "Magenta", color: #ff01ff, bg: #eeeeee },
            { text: "Cyan", color: #00ffff, bg: #222222 },
        ] : delegate := Rectangle {
            background: @linear-gradient(90deg, data.bg,data.bg.brighter(0.5));
            HorizontalLayout {
                text_Name := Text {
                    hedient(90deg, data.bg,data.bg.brighter(0.5));
            HorizontalLayout {
                text_Name := Text {
                    heigh   ut: 100px;
                                                                                                           nt) -> string { return @tr("Ctx=>" => "xx{n}xx" ty <string> t5: @tr("Untranslated string");
    property <string> c1: @tr("Context" => "xx{0}xx", @tr("CC" => "aa"));
    function ma"there is one file in my Plop\nthere are 2 files in my Flopp   \nthere are 10 files in my Hello World{}."
        && result2 == "xx1xx\nyy-999yy\nyy0yy\nyy42yy";
}
