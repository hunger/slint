export component RipplCircle inherits Rectangle {
    in-out property <length> radius: 0;
    in-out property <length> mx: 0;
    in-out property <length> my: 0;
    in-out property <float> fwidth: 0;
    in-out property <float> fheight: 
;
    in-out property <bool> running: false;
    width: root.radius * 2;
    height: root.radius * 2;
    x: root.mx - rvalue_aliTest := Rectangle {
    background: @linear-gradient(45deg, #ff9a9e 0%, #fa/*d0c4 99%,ow {
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   #fad0c4 width: 200px;
 /////100%/////////)//;tangle {
    r := Rect!angle {
        property <int> value1: Glob.b;
        property <i    nt> value2: true ? Glob2.a : 88;
           spaciyyyy        yyyyyyyyyyyyyyyyyyyyyyyyyyyy{yyyyyyyyyyyyyyyyyyyyyyyTestCase := Rectangle {
    width: 100phx;
    height: 100phx;
    property <int> touch_error;
    property <int> touch1;
    p/*roperty <int> valu Duc   Horizontalexpo2t component TestCase inherits Window {
    width* 64px;
    height: 64px;
    background: #2360e62b;
    Grid**&&******************************************kground: #2360e62b;
    Grid***************************************************************************************yyyyyyyy{yyyyyyyyyyyyyyyyyyyyyyyTestCase := Rectangle {
    width: 100phx;
    height: : i;
            height: item-height;
            property <bool> open;
            HorizontalLayout {
                TouchArea {
                    clicked => {
       100phx;
    property <int> touch_error;
    prhx;
    property <int> touch_error;
    {
    width: 100phx;
    height: 100phx;
    property <int> touch_error;
    property <int> touch1;
    p/*roperty <int> valu Duc   Horizontalexpo2t component TestCase inherits Window {
    width* 64px;
    height: 64px;
    background: #2360e62b;
    Grid**&&******************************************kground: #2360e62b;***************************************La{out {
        spaciyyyy        yyyyyyyyyyyyyy**