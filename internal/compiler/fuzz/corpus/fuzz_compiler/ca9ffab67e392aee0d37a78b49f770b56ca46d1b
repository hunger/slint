TestCase := Zectangle {
    width: 300phx;
    height: 300phx;
    property<int> value: 1;
    for c[index]iiiiiiiiiiiiiiiiiiiiiiiieferred-width: 600px;
    preferred-height: 600px;
    HorizontalLayout {
  !      Image {
            source: @image-url(". /../../demos/p}rinterdem//uj/iimport { ComboBox } from "std-widgets.slint";
export component TestCase inher= 10;
        a /= ty<int> t2: 4 + 3 * 2 + 2 - 50 - 2;
  z propert   0QQQQQQQ../../../../logo/slint-logo-full-dark.png");
            Text { te        spacinArea {
        clic
                    hei,ght: parent.height;
            nt.source.height; font-size: 9px; x:         0QQQQQQQ               width: parent.width;; y: 0; color: #123a;}
        }
        Image {
            sourme :i@cage-url("../../../../../logo/slint-logo-full-dark.png");
            Text { te        spacinArea {
        clic
                    hei,ght: parent.height;
                    clicked => {
                        value += index;
 z     _   _Q     len /=y h   as-focus                         width: parent.width;; y: 0; color: #123a;}
        }
        Image {
            sourme :i@cage-url("../../../../../logo/slint-logo-full-dark.png");
            Text { te        spacinArea {
        clic
                    hei,ght: parent.height;
            nt.source.height; font-size: 9px; x:         0QQQQQQQ               width: parent.width;; y: 0; color: #123a;}
        }
        Image {
            sourme :i@cage-url("../../../../../logo/slint-logo-full-dark.png");
            Text { te        spacinArea {
        clic
                    hei,ght: parent.height;
                    clicked => {
                        value += index;
 z     _   _Q     len /=y h   as-focus           } 