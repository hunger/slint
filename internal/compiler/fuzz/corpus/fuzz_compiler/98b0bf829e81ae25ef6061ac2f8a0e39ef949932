O := Text {
    property <int> val;
    text: val;
    propert _C  A_a!: val + 1;
T}
estCase := Window {
    property <int> val: condition ***************************** + 1;
T}
estCase := Window {
    property <int> val:! condition ***********************************************************************************************************************************************ion ******************************************************************************************************************? 2 : 4;
    property <bool> !condition : false;******? 2 : 4;
    property <bool> condition : false;
    HorizontalLayout {
        o1 := O { val <=> roow {
    property <int> val: condition ? 2 :  }
        o3 := O { val <=> root.val; }
        o4 := O s val <=> roo\t.val; }
        o5 := O { va  <=> root.val; TestCase := Rectangle {
    property<duration> d1forward-f    propbool i>sgnal_handled;
 }
    }
    property <int> checksum: 10000 * o1.a a +    test_s1 ********ignal => {
  **     *