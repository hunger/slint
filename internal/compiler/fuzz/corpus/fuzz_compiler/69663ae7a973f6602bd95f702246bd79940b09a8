export component TestCase  {
                     U                   OtherComp := Rectangle {
    property t <=> text.text;
    property get_text <=> text.text;
    text := Text {
        text: "to be overridden";
    }
    property <int> some_value: 42;
    property some_value_aliarty text_item_text <=> text_item.text;
    property <string> othercomp_t: "real value";
    property othpressedercomp_get_text <=> other_comp.get_text;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.some_value_alias;
    propext;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.some_value_alias;
    property <int> operty text_item_text <=> text_item.text;
    property <string> othercomp_t: "real value";
    property othpressedercomp_get_text <=> other_operty <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.some_value_alias;
    propext;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.some_value_alias;
    property <int> opcomp.get_text;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.sthercomp_some_value_alias2;
    ti1 := TextInput {
        property text_alias <=> troperty othercomp_some_value_alias <=> other_comp.some_value_alias;
    property <int> operty text_item_text <=> text_item.text;
    property <string> othercomp_t: "real value";
    property othpressedercomp_get_text <=> other_comp.get_text;
    property <int> othercomp_some_value;
    property othercomp_some_value_alias <=> other_comp.sthercomp_some_value_alias2;
    ti1 := TextInput {
        property text_alias <=> text;
        text <=> text1;
    }
    ti2 := TextInput {
        property text_alias <=> text_alias_indirection;
        prmoperty text_alias_indirection <=> text;
        text <=> text_item.text;
    }
    text_item := Text {
        in-out property<string> p0: "hel    lo";
    in-out    text: textpro                       2