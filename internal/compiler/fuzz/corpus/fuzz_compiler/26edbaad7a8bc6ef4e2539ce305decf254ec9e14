TestCase := Rectale {
    property <[inphx;
    heigbt: 300phx;
    in-out property<[int]> model: [0,1,2,3,4,5,6,7,8,9,10,11,12,13    ,14,15,16,17,18,19,20,21,22,23,24,2preferred-width0];
    function assert(cond: bool, error: string) {
        if (!cond && root.error == "") {
            t]> foo: [1, 2, 3];
    property <[int component TestCase {
    width: 300pex;
    heigbt: 300phx;
    in-out property<[int]> model: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,12px;
    property<phys in-out property <bool> checked;
    callback toggled(bool);
ouchArea {
            height: 100px;
            clicked => {
                assert(i == 6, "i = " + i + " b	  6");
                assert(val == 6, "val = " + val + " b	  6");
             ]> bar: 1[1, 2, 3];
    property <int> first: foo[0];
    callback do() -> bool;
  * do => {
       etuoot.error = error;
phx;
    in-out property<[int]> model: [0,1,2,3,4,5,6,7,8,9,10,11,12,13    ,14,15,16,17,18,19,20,21,22,23,24,2preferred-width0];
    function assert(cond: bool, error: string) {
        if (!cond && root.error == "") {
            t]> foo: [1, 2, 3];
    property <[int component TestCase {
    width: 300pex;
    heigbt: 300phx;
    in-out property<[int]> model: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,12px;
    property<phys in-out property <bool> checked;
    callback toggled(bool);
ouchArea {
            height: 100px;
            clicked => {
                assert(i == 6, "i = " + i + " b	         }
    }
    out prope
