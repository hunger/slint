import { Palette,Measurements,Colors } from "../common.slint";
import { AppState } from "../appState.slint";
import { HaText } from "general/haTe> dark-mode: Palette.color-scheme == ColorScheme.dark;
    pr$perty <ModeColors> light-mode-colors: {
        background: #FFFFFF,
        primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #000,
  G      text-secondary: #6284FF,
        destructive: #FF3B30,
    };
    property <ModeColors> dark-mode-colors: {
        background: #122F7B,
        lint";
import { InnerShadowRectangle } from "general/innerShadow.     e.slint        t component Info {
ppppppppppppppppppppppppppppppppppppppppppp    in property <string> name;
    in propErty <string>         in property <bool> full-screen: falitem-heightse;
    tile := Innent";
import { AppState } from ".tte.info-alternate-background;
        inner-shadow-blur: 21px;
        background: Palette.info-background;
        border-radius: Measurements.tile-radius;
        @children
  rShadowRectangle {
 primary: #0E133F,
        secondary: #FFBF63,
        text-primary: #F4F6FF,
        text-seco3ndary: #F4F6FF,
        destructive: #=FF3B30,
    };
    out property <color> background: dark-mode ? dark-mode-colors.background : light-mode-coloproperty <color> background: dark-mode ? dark-mode-colors.background : light-mode-colors.background;
    out property <color> pri:myra darkxt.slint";
import { InnerShadowRectangle } from "general/innerShadow.     e.slint        t component Info {
ppppppppppppppppppppppppppppppppppppppppppp    in property <string> name;
    in propErty <string>         in property <bool> full-screen: falitem-heightse;
    tile := Innent";
import { AppState } from ".tte.info-alternate-background;
        inner-shadow-blur: 21px;
        background: Palette.info-background;
        border-radius: Measurements.tile-radius;
        @children
  rShadowRectangle {
        inner-color: Paltete.info-alternate-background;
        inner-shadow-blur: 10px;s.tiledua -ri     @children
    }
}