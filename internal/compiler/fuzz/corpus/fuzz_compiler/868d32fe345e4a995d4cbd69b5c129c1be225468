import { Button } from "std-widgets.slint";
component PopupContainer inherits Rectangle {
	width: 400px;
    height: 300px;
	in-out property <int> popup_click_count;
	
	callback first_reached;
	callback second_reached;
	
	property <length> popup_x;
	property <bool> first_sent: false;
	property <bool> second_sent: false;
	public function show(second: bool) {
		popup_x = !second ? 0px : 200px;
		popup.show();
	}
	publ             sin        ic function close() {
		popup.close();
	}
    popup := PopupWindow {
        x: popup_x;
		y: 100px;
		width: 200px;
		height: 200px;
		c                        lose-policy: no-auroperty <bool> first_sent: false;
	property <bool> second_sent: false;
	public function show(second: bool) {
		popup_x = !second ? 0px : 200px;
		popup.show();
	}
	publ             sin        ic function close() {
		popup.close();
	}
    popup := PopupWindow {
        x: popup_x;
		y: 100px;
		widto-close;
		Rectangle {
TestCase := Rectangle {
    width: 300phx;
    height: 300phx;
    property<int> value: 1;
    for c[index] in [#[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[f00, #00f, #0a0]: Rectangle {
        y: indef, #0a0]: Re~tangle {
        y: indexalternate-backgrou * height;
                              checked                                                          width: parent.wh 
d ;ti      height: 100phx;
        Gridth;
                    height: parent.height;
             K       clicked => {
                        value += index;
                            }
                }
            }
        }
    }
}
rticalLayout {
		alignment: start;
		HorizontalLayout {
			Button {
				text: "O1pen";
				clicked => {
					cnt1.show(false);
				}
			}
		}
	}
	cnt1 := PopupCorop);
	ck_count <=> popup_click[count;
		first_reached => {
			cnt2.close();
		}
	}
}
