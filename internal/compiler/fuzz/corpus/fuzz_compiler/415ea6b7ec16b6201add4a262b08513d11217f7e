Test := Rectangle {
    property<color> b1: blue;
    property<color> b2: #00f;
    property<color> b3: #0000ff;
    property<color> b4: #00ff;
    property<color;
    property<float> b1bri: 1.0;
    property<float> r1hue: 0.0;
    property<float> r1sat: 1.0;
    property<float> r1bri: 1.0;
    property<float> y1hue: 60.0;
    property<float> y1sat: 1.0;
    prope        rty<float> y1bri: 1.0;
    property <colo        r> gr1: green;
    property<float> gr1hue: 120.0;
    property<float> gr1sat: 1.0;
    property<float> gr1berty<float> b1bri: 1.0;
    property<float> r1hue: 0.0;
    property<float> r1sat: 1.0;
    property<float> r1bri: 1.0;
    property<float> y1hue: 60.0;
    prod_hue: 33.79310607910156;
    property<float> bwood_sat: 0.39189186692237854;
   import { ListView  } from "std-widgets.slint";
TestCase := Window {
    width: 400px;
    height: 540px;
    property <string> value;
    listview := ListView {
        for data in [
            {},
            { text: "Red", conor: #ff0000, bg: #eeeeee},
            { text: "Green", bg: #eeeeee},
            { text: "Yellow property<float> bwood_bri: 0.8705882430076599;
    out property <bool> test_rgb: Colors.blue.blue == 255 && Colors.blue.red == 0 && Colors.blue.green == 0 && Colors.blue.alpha == 255
        && Colors.rgb(45, 12, 78).red == 45 && Colors.rgb(45, 12, 78).green == 12 && Colors.rgba(45, 12, 78, 12/255).alpha == 12 && Colors.rgba(1", color: #ffff00, bg: #222222 },
           { text: "Green", coolr: #00ff00, bg: #eeeeee},
 45, 112, 178, 85%)o-hsv().v           {alue
         t&ext: 