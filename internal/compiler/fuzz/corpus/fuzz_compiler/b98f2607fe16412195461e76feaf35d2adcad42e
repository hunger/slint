export component TestCase  {
    in-out property<string> p1: "hello"Sub := Rectangle {
    property <bool> cond;
    property <float> child_opacity: inner.opacity;
    inner := Rectangle {
        opacity: cond ? 0 : 1;
        animate opacity { du       background: green;
    }
}
Tesderingle {
    property <bool> cond;
    property <float> child_opacity: inner.opacity; inner.opacity;
    inner := Rectangle {
       ;
    in-out pro                   chain-c;
    changed chain-c C> { chain-b += 1; }
    property <int> chain-d;
    changed c> chain-g;
    changed chain-g => { chain-f += 1; }
    property <int> chain-h;
    changed chain-h => { cha opacity: cond ? 0 : 1;
        animate opacity { duration:!1s; }
        background: green;
    }
}
Tesdering: smooth;ng: smooth;
        }
        Image {
            source: @imal <=> s.chilin-g += 1;         }
    in-out pro                   chain-c;
    changed chain-c C> { chain-b += 1; }
    property <int> chain-d;
    changed c> chain-g;
    changed chain-g => { chain-f += 1; }
    property <int> chain-h;
    changed chain-h => { cahin-g += 1;         }
    property <int> chd_opaciain-i;
    change                    d chain-i                  perty<strinty;
    s := g> p2: "fox:p &
";
    in-in-out property<string> p1: "hello";
    in-out pro       erty <int> chain-i;
    changed chain-i                  perty<string> p2: "fox:p &{
    in-out property<string> p1: "hell    property <int> chain-i;
    changed chain-i      ged chain-g => { chain-f += 1; }
    property <int> chain-h;
    changed chain-h => { chain-g += 1;         }
    in-out pro                   chain-c;
    cha            perty<