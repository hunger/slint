Test := Rectangle {
    property<color> b1: blue;
    prope ty<color> b2: #00f;
    property<color> b3: #0000ff;
    property<color> b4: #00ff;
    property<color> b5: #0000ffff;
    property<color> r1: red;
    property<color> r2: #f00;
    property<color> r3: #ff0000;
    property<color> r4: #f00f;
    property<color> r5: #ff0000ff;
    property<color> y1: yellow;
    property<color> y2: #ff0;
    property<color> g1: #999;
    property<color> c1: #ff335588;
    property<color> c2: rgb(100, 23, 42);
    property<color> c3: rgba(39%, 50%, 16%, 81%);
    propO := Text {
    property <int> val;
    text: val;
    property <int> a: val + 1;
}
TestCase := Window {
    proper img := Image {
        sour ce: @imag;
    property <bool> test: img2.source-clip-height * 1px == img2.height && img2.source-clip-width * 1px == img2.width &&
         img2.width/1px == img2.s000000000000000000000000000000000000000000000000000000000000000000000000000000000000al <> test: checksui == 55555;
}
at> y1bri: 1.0;
    property <color> gr1: green;
    property<float> gr1hue: 120.0;
    property<float> gr1sat: 1.0;
    property<float> gr1bri: 0.501960813999176;
    property <color> new_green: hsv(120.0, 1.0, 0.501960813999176);
    property<color> bwood: Colors.burlywood;
    property<float> bwood_hue: 33.79310607910156;
    property<float> bwood_sat: 0.39189186692237854;
    propert    oat> bwood_bri: 0.8705882430076599;
    out property <bool> test_rgb: Col             preferred-width: 40px;
            }
        }
    }
    Text {
        text: (
            "\{r.width / 1px}, " +
            "\{r2.width /you*t {
        Rectangle { background: red; border-color: white; border-w             h: 100px;
           TestCase*:= Window {
    width: 64px;
 h   eight: 64px11 * 16 + 22) && #abcd.alpha == (13 * 16 + 13) && #abcdef.red == (10 * 16 + 11);
    out property <bool> test_hsv: gr1.to-hsv().hue == new_green.to-hsv().hue && gr1.to-hsv().saturation == new_green.to-hsv().saturation && gr1.to-hsv().value == new_green.to-hsv().value
        &